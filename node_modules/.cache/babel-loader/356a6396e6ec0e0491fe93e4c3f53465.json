{"ast":null,"code":"import _slicedToArray from \"/Users/austinvuong/AuthentiCar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/austinvuong/AuthentiCar/src/containers/AccountContainer.js\";\nimport React, { useContext, useState, useCallback } from 'react';\nimport SavedContext from '../contexts/SavedContext';\nimport SavedCarComponent from '../components/SavedCarComponent';\nimport data from '../constants/car-items.json';\nimport Grid from '@material-ui/core/Grid'; // import hondaNsx from '../assets/honda.jpg';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountTopBar from '../components/AccountTopBar';\nimport SavedNoItems from '../components/SavedNoItems';\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EndList from '../components/EndListComponent'; // import StreamContext from '../contexts/StreamContext';\n// import { descriptions } from 'jest-config';\n\nconst BigInt = JSBI.BigInt;\nconst useStyles = makeStyles(theme => ({\n  itemGrid: {\n    marginTop: 64\n  }\n}));\n\nconst getItemFromId = id => data.items.filter(x => x.id === id)[0];\n\nconst AccountContainer = props => {\n  const classes = useStyles();\n  const savedContext = useContext(SavedContext);\n  const savedFrom = savedContext.saved;\n  const savedKeys = Object.keys(savedFrom);\n  console.log(savedKeys);\n\n  const _useWavelet = useWavelet('https://testnet.perlin.net'),\n        _useWavelet2 = _slicedToArray(_useWavelet, 3),\n        client = _useWavelet2[0],\n        node = _useWavelet2[1],\n        clientErr = _useWavelet2[2];\n\n  const _useAccount = useAccount(client, '315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612'),\n        _useAccount2 = _slicedToArray(_useAccount, 2),\n        account = _useAccount2[0],\n        accountErr = _useAccount2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        carLogs = _useState2[0],\n        setCarLogs = _useState2[1];\n\n  let conn = true;\n  const onUpdate = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n    conn = false;\n  }, []);\n  const onLoad = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n    conn = false;\n  }, []);\n\n  const _useContract = useContract(client, '437696d7c018e635c98823856b4d83f0787084396431c42b8331c34ef88406d7', onUpdate, onLoad),\n        _useContract2 = _slicedToArray(_useContract, 1),\n        contract = _useContract2[0];\n\n  let entryRes = [];\n  let comp = [];\n  let load = [];\n\n  if (carLogs.length > 0) {\n    conn = false;\n  }\n\n  if (conn && carLogs.length === 0) {\n    load.push(React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  } // console.log(savedContext.count);\n  // console.log(conn);\n\n\n  if (!conn && savedContext.count === 0) {\n    load.push(React.createElement(SavedNoItems, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n  let res = [];\n\n  for (var i = 0; i < carLogs.length; i++) {\n    res = carLogs[i].split('\\n');\n  } // console.log(res);\n\n\n  for (var i = 0; i < res; i++) {\n    let carOb = JSON.parse(res[i]);\n    let carName = '';\n    carName = carOb.carName;\n    carName = carName.toUpperCase();\n    let carImage = '';\n\n    if (carName === 'HONDA NSX') {\n      carImage = 'honda_nsx.jpg';\n    }\n\n    comp.push(React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(SavedCarComponent, {\n      carName: carName,\n      carVin: carOb.carVin,\n      carOwner: carOb.carOwner,\n      carOdometer: carOb.carOdometer,\n      carYear: carOb.carYear,\n      carGearbox: carOb.carGearbox,\n      carAccidents: carOb.carAccidents,\n      carMaintenance: carOb.carMaintenance,\n      carImage: carImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })));\n  } // let carLogsLength = carLogs.length;\n  //     for (var i = 0; i < carLogsLength; i++) {\n  //         entryRes = carLogs[i].split('\\n');\n  //     }\n  //     let entryResLength = entryRes.length;\n  //     for (var j = 0; j < entryResLength; j++) {\n  //         let stringRes = entryRes[j].split('|');\n  //         // console.log('whatwhatwhat');\n  //         // console.log(key);\n  //         for (var u = 0; u < savedKeys.length; u++) {\n  //             if (stringRes[1] === savedKeys[u]) {\n  //                 console.log('yo');\n  //                 let carName = stringRes[0];\n  //                 let carVin = stringRes[1];\n  //                 // streamContext.addToStream(stringRes[1]);\n  //                 let carOwner = stringRes[2];\n  //                 let carOdometer = stringRes[3];\n  //                 let carImage = '';\n  //                 carName = carName.toUpperCase();\n  //                 if (carName === 'HONDA NSX') {\n  //                     carImage = 'honda_nsx.jpg'\n  //                 }\n  //                 comp.push(<Grid item> \n  //                 <SavedCarComponent\n  //                     carName={carName}\n  //                     carVin={carVin}\n  //                     carOwner={carOwner}\n  //                     carOdometer={carOdometer}\n  //                     carImage={carImage} />\n  //                 </Grid>\n  //                 )\n  //             }\n  //         }\n  //     }\n\n\n  return React.createElement(React.Fragment, null, React.createElement(AccountTopBar, {\n    savedKeys: savedKeys,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    className: classes.itemGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, load, comp.length > 0 ? comp : React.createElement(EndList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })));\n};\n\nexport default AccountContainer;","map":{"version":3,"sources":["/Users/austinvuong/AuthentiCar/src/containers/AccountContainer.js"],"names":["React","useContext","useState","useCallback","SavedContext","SavedCarComponent","data","Grid","makeStyles","AccountTopBar","SavedNoItems","useWavelet","useAccount","useContract","Wavelet","JSBI","CircularProgress","EndList","BigInt","useStyles","theme","itemGrid","marginTop","getItemFromId","id","items","filter","x","AccountContainer","props","classes","savedContext","savedFrom","saved","savedKeys","Object","keys","console","log","client","node","clientErr","account","accountErr","carLogs","setCarLogs","conn","onUpdate","contract","wallet","loadWalletFromPrivateKey","test","logs","onLoad","entryRes","comp","load","length","push","progress","count","res","i","split","carOb","JSON","parse","carName","toUpperCase","carImage","carVin","carOwner","carOdometer","carYear","carGearbox","carAccidents","carMaintenance"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useCallback} from 'react';\nimport SavedContext from '../contexts/SavedContext';\nimport SavedCarComponent from '../components/SavedCarComponent';\nimport data from '../constants/car-items.json'\nimport Grid from '@material-ui/core/Grid';\n// import hondaNsx from '../assets/honda.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountTopBar from '../components/AccountTopBar';\nimport SavedNoItems from '../components/SavedNoItems';\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EndList from '../components/EndListComponent';\n// import StreamContext from '../contexts/StreamContext';\n// import { descriptions } from 'jest-config';\nconst BigInt = JSBI.BigInt;\n\n\nconst useStyles = makeStyles(theme => ({\n    itemGrid: {\n        marginTop: 64,\n    }\n\n}))\n\nconst getItemFromId = id => data.items.filter(x => x.id === id)[0];\n\nconst AccountContainer = (props) => {\n    const classes = useStyles();\n    const savedContext = useContext(SavedContext);\n    const savedFrom = savedContext.saved;\n    const savedKeys = Object.keys(savedFrom);\n    console.log(savedKeys);\n\n    const [client, node, clientErr] = useWavelet('https://testnet.perlin.net');\n    const [account, accountErr] = useAccount(client, '315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    const [carLogs, setCarLogs] = useState([]);\n    let conn = true;\n    const onUpdate = useCallback((contract) => {\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n      conn = false;\n      \n    }, []);\n  \n    const onLoad = useCallback((contract) => {\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      setCarLogs(contract.test(wallet,'get_cars', BigInt(0)).logs);\n    conn = false;\n      \n    }, []);\n  \n    const [contract] = useContract(client, '437696d7c018e635c98823856b4d83f0787084396431c42b8331c34ef88406d7', onUpdate, onLoad);\n\n    let entryRes = []\n    let comp = []\n    let load = [];\n    if (carLogs.length > 0) {\n        conn = false;\n    }\n    if (conn && carLogs.length === 0) {\n        load.push(\n        <Grid item>\n            <CircularProgress className={classes.progress} />\n        </Grid>\n        )\n    }\n    // console.log(savedContext.count);\n    // console.log(conn);\n    if (!conn && savedContext.count === 0) {\n        load.push(\n            <SavedNoItems />\n        )\n    }\n    let res = []\n        for (var i = 0; i < carLogs.length; i++) {\n            res = carLogs[i].split('\\n');\n        }\n        // console.log(res);\n    for (var i = 0; i < res; i++) {\n        let carOb = JSON.parse(res[i]);\n        let carName = '';\n        carName = carOb.carName;\n        carName = carName.toUpperCase();\n        let carImage = '';\n        if (carName === 'HONDA NSX') {\n            carImage = 'honda_nsx.jpg';\n        }\n        comp.push(\n            <Grid item>\n                <SavedCarComponent\n                carName={carName}\n                carVin={carOb.carVin}\n                carOwner={carOb.carOwner}\n                carOdometer={carOb.carOdometer}\n                carYear = {carOb.carYear}\n                carGearbox = {carOb.carGearbox}\n                carAccidents = {carOb.carAccidents}\n                carMaintenance = {carOb.carMaintenance}\n                carImage={carImage}\n                />\n            </Grid>\n        )\n\n    }\n    // let carLogsLength = carLogs.length;\n    //     for (var i = 0; i < carLogsLength; i++) {\n    //         entryRes = carLogs[i].split('\\n');\n    //     }\n    //     let entryResLength = entryRes.length;\n    //     for (var j = 0; j < entryResLength; j++) {\n    //         let stringRes = entryRes[j].split('|');\n    //         // console.log('whatwhatwhat');\n    //         // console.log(key);\n    //         for (var u = 0; u < savedKeys.length; u++) {\n\n    //             if (stringRes[1] === savedKeys[u]) {\n    //                 console.log('yo');\n    //                 let carName = stringRes[0];\n    //                 let carVin = stringRes[1];\n    //                 // streamContext.addToStream(stringRes[1]);\n    //                 let carOwner = stringRes[2];\n    //                 let carOdometer = stringRes[3];\n    //                 let carImage = '';\n    //                 carName = carName.toUpperCase();\n    //                 if (carName === 'HONDA NSX') {\n    //                     carImage = 'honda_nsx.jpg'\n    //                 }\n    //                 comp.push(<Grid item> \n    //                 <SavedCarComponent\n    //                     carName={carName}\n    //                     carVin={carVin}\n    //                     carOwner={carOwner}\n    //                     carOdometer={carOdometer}\n    //                     carImage={carImage} />\n    //                 </Grid>\n    //                 )\n\n    //             }\n    //         }\n    //     }\n\n\n\n\n\n\n\n\n    return (\n    <>\n        <AccountTopBar \n        savedKeys={savedKeys}\n        />\n        <Grid \n            container \n            spacing={2} \n            justify='center' \n            className={classes.itemGrid}\n        >\n            {load}\n            {comp.length > 0 ? \n            comp :\n            <EndList />\n            }\n            \n         </Grid>\n    </>\n\n    )\n}\n\nexport default AccountContainer;"]},"metadata":{},"sourceType":"module"}