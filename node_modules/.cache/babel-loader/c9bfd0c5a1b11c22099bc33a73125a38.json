{"ast":null,"code":"import _slicedToArray from \"/Users/austinvuong/AuthentiCar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/austinvuong/AuthentiCar/src/containers/AccountContainer.js\";\nimport React, { useContext, useState, useCallback } from 'react';\nimport SavedContext from '../contexts/SavedContext';\nimport SavedCarComponent from '../components/SavedCarComponent';\nimport data from '../constants/car-items.json';\nimport Grid from '@material-ui/core/Grid'; // import hondaNsx from '../assets/honda.jpg';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountTopBar from '../components/AccountTopBar';\nimport SavedNoItems from '../components/SavedNoItems';\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\"; // import StreamContext from '../contexts/StreamContext';\n// import { descriptions } from 'jest-config';\n\nconst BigInt = JSBI.BigInt;\nconst useStyles = makeStyles(theme => ({\n  itemGrid: {\n    marginTop: 64\n  }\n}));\n\nconst getItemFromId = id => data.items.filter(x => x.id === id)[0];\n\nconst AccountContainer = props => {\n  const classes = useStyles();\n  const savedContext = useContext(SavedContext);\n  const savedFrom = savedContext.saved;\n  const savedKeys = Object.keys(savedFrom);\n  console.log(savedKeys);\n\n  const _useWavelet = useWavelet('https://testnet.perlin.net'),\n        _useWavelet2 = _slicedToArray(_useWavelet, 3),\n        client = _useWavelet2[0],\n        node = _useWavelet2[1],\n        clientErr = _useWavelet2[2];\n\n  const _useAccount = useAccount(client, '315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612'),\n        _useAccount2 = _slicedToArray(_useAccount, 2),\n        account = _useAccount2[0],\n        accountErr = _useAccount2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        carLogs = _useState2[0],\n        setCarLogs = _useState2[1];\n\n  const onUpdate = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n  }, []);\n  const onLoad = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n  }, []);\n\n  const _useContract = useContract(client, 'eec84af3d99c3fe26745a6da0cfa23029c3724ea725a49e91b1c5987335ca749', onUpdate, onLoad),\n        _useContract2 = _slicedToArray(_useContract, 1),\n        contract = _useContract2[0];\n\n  let entryRes = [];\n  let comp = [];\n  let carLogsLength = carLogs.length;\n\n  for (var i = 0; i < carLogsLength; i++) {\n    entryRes = carLogs[i].split('\\n');\n  }\n\n  let entryResLength = entryRes.length;\n\n  for (var j = 0; j < entryResLength; j++) {\n    let stringRes = entryRes[j].split('|'); // console.log('whatwhatwhat');\n    // console.log(key);\n\n    for (var u = 0; u < savedKeys.length; u++) {\n      if (stringRes[1] === savedKeys[u]) {\n        console.log('yo');\n        let carName = stringRes[0];\n        let carVin = stringRes[1]; // streamContext.addToStream(stringRes[1]);\n\n        let carOwner = stringRes[2];\n        let carOdometer = stringRes[3];\n        let carImage = '';\n\n        if (carName.toUpperCase() === 'HONDA NSX') {\n          carImage = 'honda_nsx.jpg';\n        }\n\n        comp.push(React.createElement(Grid, {\n          item: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(SavedCarComponent, {\n          carName: carName,\n          carVin: carVin,\n          carOwner: carOwner,\n          carOdometer: carOdometer,\n          carImage: carImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        })));\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(AccountTopBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    className: classes.itemGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, savedContext.count > 0 ? // Object.keys(savedFrom).map(vin => (\n  //     <Grid item>\n  //         <SavedCarComponent \n  //             key = {vin}\n  //             vin = {vin}\n  //             carName={getItemFromId(vin).carName}\n  //             carImage={getItemFromId(vin).image}\n  //             description={getItemFromId(vin).description}\n  //         />\n  //     </Grid>\n  // ))\n  {\n    comp\n  } : React.createElement(SavedNoItems, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })));\n};\n\nexport default AccountContainer;","map":{"version":3,"sources":["/Users/austinvuong/AuthentiCar/src/containers/AccountContainer.js"],"names":["React","useContext","useState","useCallback","SavedContext","SavedCarComponent","data","Grid","makeStyles","AccountTopBar","SavedNoItems","useWavelet","useAccount","useContract","Wavelet","JSBI","BigInt","useStyles","theme","itemGrid","marginTop","getItemFromId","id","items","filter","x","AccountContainer","props","classes","savedContext","savedFrom","saved","savedKeys","Object","keys","console","log","client","node","clientErr","account","accountErr","carLogs","setCarLogs","onUpdate","contract","wallet","loadWalletFromPrivateKey","test","logs","onLoad","entryRes","comp","carLogsLength","length","i","split","entryResLength","j","stringRes","u","carName","carVin","carOwner","carOdometer","carImage","toUpperCase","push","count"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useCallback} from 'react';\nimport SavedContext from '../contexts/SavedContext';\nimport SavedCarComponent from '../components/SavedCarComponent';\nimport data from '../constants/car-items.json'\nimport Grid from '@material-ui/core/Grid';\n// import hondaNsx from '../assets/honda.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountTopBar from '../components/AccountTopBar';\nimport SavedNoItems from '../components/SavedNoItems';\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\";\n// import StreamContext from '../contexts/StreamContext';\n// import { descriptions } from 'jest-config';\nconst BigInt = JSBI.BigInt;\n\n\nconst useStyles = makeStyles(theme => ({\n    itemGrid: {\n        marginTop: 64,\n    }\n\n}))\n\nconst getItemFromId = id => data.items.filter(x => x.id === id)[0];\n\nconst AccountContainer = (props) => {\n    const classes = useStyles();\n    const savedContext = useContext(SavedContext);\n    const savedFrom = savedContext.saved;\n    const savedKeys = Object.keys(savedFrom);\n    console.log(savedKeys);\n\n    const [client, node, clientErr] = useWavelet('https://testnet.perlin.net');\n    const [account, accountErr] = useAccount(client, '315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    const [carLogs, setCarLogs] = useState([]);\n  \n    const onUpdate = useCallback((contract) => {\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n    }, []);\n  \n    const onLoad = useCallback((contract) => {\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      setCarLogs(contract.test(wallet,'get_cars', BigInt(0)).logs);\n    }, []);\n  \n    const [contract] = useContract(client, 'eec84af3d99c3fe26745a6da0cfa23029c3724ea725a49e91b1c5987335ca749', onUpdate, onLoad);\n\n    let entryRes = []\n    let comp = []\n    let carLogsLength = carLogs.length;\n        for (var i = 0; i < carLogsLength; i++) {\n            entryRes = carLogs[i].split('\\n');\n        }\n        let entryResLength = entryRes.length;\n        for (var j = 0; j < entryResLength; j++) {\n            let stringRes = entryRes[j].split('|');\n            // console.log('whatwhatwhat');\n            // console.log(key);\n            for (var u = 0; u < savedKeys.length; u++) {\n\n                if (stringRes[1] === savedKeys[u]) {\n                    console.log('yo');\n                    let carName = stringRes[0];\n                    let carVin = stringRes[1];\n                    // streamContext.addToStream(stringRes[1]);\n                    let carOwner = stringRes[2];\n                    let carOdometer = stringRes[3];\n                    let carImage = '';\n                    if (carName.toUpperCase() === 'HONDA NSX') {\n                        carImage = 'honda_nsx.jpg'\n                    }\n                    comp.push(<Grid item> \n                    <SavedCarComponent\n                        carName={carName}\n                        carVin={carVin}\n                        carOwner={carOwner}\n                        carOdometer={carOdometer}\n                        carImage={carImage} />\n                    </Grid>\n                    )\n\n                }\n            }\n        }\n\n\n\n\n\n\n\n\n    return (\n    <>\n        <AccountTopBar />\n        <Grid \n            container \n            spacing={2} \n            justify='center' \n            className={classes.itemGrid}\n        >\n            {savedContext.count > 0 ? (\n            // Object.keys(savedFrom).map(vin => (\n            //     <Grid item>\n            //         <SavedCarComponent \n            //             key = {vin}\n            //             vin = {vin}\n            //             carName={getItemFromId(vin).carName}\n            //             carImage={getItemFromId(vin).image}\n            //             description={getItemFromId(vin).description}\n\n            //         />\n            //     </Grid>\n            // ))\n            {comp}\n            ) : (\n                <SavedNoItems />\n            )}\n            \n         </Grid>\n    </>\n\n    )\n}\n\nexport default AccountContainer;"]},"metadata":{},"sourceType":"module"}