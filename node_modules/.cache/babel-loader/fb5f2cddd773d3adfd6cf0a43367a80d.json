{"ast":null,"code":"import _defineProperty from \"/Users/austinvuong/AuthentiCar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/austinvuong/AuthentiCar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/austinvuong/AuthentiCar/src/containers/LoginContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport LoginTopbar from '../components/LoginTopBar';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport LoginContext from '../contexts/LoginContext'; //import { Button } from '@material-ui/core';\n//import { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button'; // import Logo from '../assets/69746894_1826895420789016_7438798866075353088_n.png';\n\nimport ErrorWithStack from 'jest-util/build/ErrorWithStack';\nimport { ERROR } from 'jest-validate/build/utils'; // const ranges = [\n//   {\n//     value: '0-20',\n//     label: '0 to 20',\n//   },\n//   {\n//     value: '21-50',\n//     label: '21 to 50',\n//   },\n//   {\n//     value: '51-100',\n//     label: '51 to 100',\n//   },\n// ];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(2)\n  },\n  textField: {\n    flexBasis: 200\n  },\n  itemGrid: {\n    marginTop: 150\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  }\n}));\nexport default function OutlinedInputAdornments() {\n  const classes = useStyles();\n  const loginContext = useContext(LoginContext);\n\n  const _React$useState = React.useState({\n    //amount: '',\n    nameError: null,\n    passwordError: null,\n    password: '',\n    //weight: '',\n    //weightRange: '',\n    showPassword: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1]; //   const [name, setName] = useState(\"\");\n  //   const handleSubmit = (evt) => {\n  //     evt.preventDefault();\n  //     alert(`Submitting Name ${name}`);\n  //   }\n\n\n  const handleSubmit = event => {\n    let nameError = null;\n    let passwordError = null;\n    let password = values.password;\n    let name = values.name;\n    let valid = true;\n\n    if (name == null || name.trim() === '') {\n      nameError = 'name cannot be empty';\n      valid = false;\n    } else if (name.length > 32) {\n      nameError = 'name cannot be longer than 32 chars';\n      valid = false;\n    } else if (name.length < 6) {\n      nameError = 'name cannot be shorter than 6 chars';\n      valid = false;\n    }\n\n    if (password == null || password.trim() === '') {\n      passwordError = 'password cannot be empty';\n      valid = false;\n    }\n\n    setValues(_objectSpread({}, values, {\n      nameError,\n      passwordError\n    }));\n\n    if (nameError || passwordError) {\n      event.preventDefault();\n    }\n\n    if (values.prop === 'mechanic@authenticar.com') {\n      loginContext.addToLogin(values.prop);\n    }\n\n    return valid;\n  };\n\n  const handleChange = prop => event => {\n    setValues(_objectSpread({}, values, {\n      [prop]: event.target.value\n    }));\n    console.log(values.prop);\n  };\n\n  const handleClickShowPassword = () => {\n    setValues(_objectSpread({}, values, {\n      showPassword: !values.showPassword\n    }));\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  }; //   onSubmit = () => {\n  //       const errors \n  //   }\n\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(LoginTopbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    className: classes.itemGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"assets/69746894_1826895420789016_7438798866075353088_n.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-simple-start-adornment\",\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    label: \"Username\",\n    error: values.nameError,\n    helperText: values.nameError,\n    placeholder: \"make it interesting\",\n    onChange: handleChange('name'),\n    value: values.prop // value={name}\n    // onChange={e => setName(e.target.value)}\n    // InputProps={{\n    //   startAdornment: <InputAdornment position=\"start\">Email/Name</InputAdornment>,\n    // }}\n    //ref=\"myField\"\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-adornment-password\",\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    type: values.showPassword ? 'text' : 'password',\n    label: \"Password\",\n    error: values.passwordError,\n    helperText: values.passwordError,\n    value: values.password,\n    placeholder: \"make it secure\",\n    onChange: handleChange('password'),\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPassword,\n        onMouseDown: handleMouseDownPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, values.showPassword ? React.createElement(VisibilityOff, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }) : React.createElement(Visibility, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    style: {\n      margin: 15\n    },\n    onClick: handleSubmit,\n    component: Link,\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Login\"))));\n} // import React, {useState} from 'react';\n// import LoginTopbar from '../components/LoginTopBar'\n// import clsx from 'clsx';\n// import { makeStyles } from '@material-ui/core/styles';\n// import IconButton from '@material-ui/core/IconButton';\n// import InputAdornment from '@material-ui/core/InputAdornment';\n// import TextField from '@material-ui/core/TextField';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Visibility from '@material-ui/icons/Visibility';\n// import VisibilityOff from '@material-ui/icons/VisibilityOff';\n// import Grid from '@material-ui/core/Grid';\n// //import { Button } from '@material-ui/core';\n// //import { makeStyles } from '@material-ui/core/styles';\n// import Button from '@material-ui/core/Button';\n// import Logo from '../assets/69746894_1826895420789016_7438798866075353088_n.png';\n// import ErrorWithStack from 'jest-util/build/ErrorWithStack';\n// import { ERROR } from 'jest-validate/build/utils';\n// // const ranges = [\n// //   {\n// //     value: '0-20',\n// //     label: '0 to 20',\n// //   },\n// //   {\n// //     value: '21-50',\n// //     label: '21 to 50',\n// //   },\n// //   {\n// //     value: '51-100',\n// //     label: '51 to 100',\n// //   },\n// // ];\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//   },\n//   margin: {\n//     margin: theme.spacing(2),\n//   },\n//   textField: {\n//     flexBasis: 200,\n//   },\n//   itemGrid: {\n//       marginTop: 150,\n//   },\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   input: {\n//     display: 'none',\n//   },\n// }));\n// export default function OutlinedInputAdornments() {\n//   const classes = useStyles();\n//   const [values, setValues] = React.useState({\n//     //amount: '',\n//     nameError: null,\n//     password: '',\n//     //weight: '',\n//     //weightRange: '',\n//     showPassword: false,\n//   });\n// //   const [name, setName] = useState(\"\");\n// //   const handleSubmit = (evt) => {\n// //     evt.preventDefault();\n// //     alert(`Submitting Name ${name}`);\n// //   }\n//   const handleSubmit = () => {\n//     let nameError = null;\n//     let name = values.name;\n//     if (name == null || name.trim() === '') {\n//       nameError = 'name cannot be empty';\n//     } else if (name.length > 32) {\n//       nameError = 'name cannot be longer than 32 chars';\n//     } else if (name.length < 6) {\n//       nameError = 'name cannot be shorter than 6 chars';\n//     }\n//     setValues({ ...values, nameError });\n//   }\n//   const handleChange = prop => event => {\n//     setValues({ ...values, [prop]: event.target.value });\n//     console.log(values.prop)\n//   };\n//   const handleClickShowPassword = () => {\n//     setValues({ ...values, showPassword: !values.showPassword });\n//   };\n//   const handleMouseDownPassword = event => {\n//     event.preventDefault();\n//   };\n// //   onSubmit = () => {\n// //       const errors \n// //   }\n//   return (\n//     <div className={classes.root}>\n//     <LoginTopbar />\n//     <Grid \n//         container\n//         spacing={2}\n//         justify='center'\n//         className={classes.itemGrid}\n//     > \n//     <img src={Logo}></img>\n//       <form> \n//       <Grid item>\n//       <TextField\n//         id=\"outlined-simple-start-adornment\"\n//         className={clsx(classes.margin, classes.textField)}\n//         variant=\"outlined\"\n//         label=\"Username\"\n//         placeholder=\"make it interesting\"\n//         onChange={handleChange('name')}\n//         value={values.prop}\n//         // value={name}\n//         // onChange={e => setName(e.target.value)}\n//         // InputProps={{\n//         //   startAdornment: <InputAdornment position=\"start\">Email/Name</InputAdornment>,\n//         // }}\n//         //ref=\"myField\"\n//       />\n//       {values.nameError ? <p>{values.nameError}</p> : ''}\n//       </Grid>\n//       {/* <TextField\n//         select\n//         className={clsx(classes.margin, classes.textField)}\n//         variant=\"outlined\"\n//         label=\"With Select\"\n//         value={values.weightRange}\n//         onChange={handleChange('weightRange')}\n//         InputProps={{\n//           startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n//         }}\n//       >\n//         {ranges.map(option => (\n//           <MenuItem key={option.value} value={option.value}>\n//             {option.label}\n//           </MenuItem>\n//         ))}\n//       </TextField> */}\n//       {/* <TextField\n//         id=\"outlined-adornment-amount\"\n//         className={clsx(classes.margin, classes.textField)}\n//         variant=\"outlined\"\n//         label=\"Amount\"\n//         value={values.amount}\n//         onChange={handleChange('amount')}\n//         InputProps={{\n//           startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n//         }}\n//       /> */}\n//       {/* <TextField\n//         id=\"outlined-adornment-weight\"\n//         className={clsx(classes.margin, classes.textField)}\n//         variant=\"outlined\"\n//         label=\"Weight\"\n//         value={values.weight}\n//         onChange={handleChange('weight')}\n//         helperText=\"Weight\"\n//         InputProps={{\n//           endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n//         }}\n//       /> */}\n//       <Grid item>\n//       <TextField\n//         id=\"outlined-adornment-password\"\n//         className={clsx(classes.margin, classes.textField)}\n//         variant=\"outlined\"\n//         type={values.showPassword ? 'text' : 'password'}\n//         label=\"Password\"\n//         value={values.password}\n//         placeholder=\"make it secure\"\n//         onChange={handleChange('password')}\n//         InputProps={{\n//           endAdornment: (\n//             <InputAdornment position=\"end\">\n//               <IconButton\n//                 edge=\"end\"\n//                 aria-label=\"toggle password visibility\"\n//                 onClick={handleClickShowPassword}\n//                 onMouseDown={handleMouseDownPassword}\n//               >\n//                 {values.showPassword ? <VisibilityOff /> : <Visibility />}\n//               </IconButton>\n//             </InputAdornment>\n//           ),\n//         }}\n//       />\n//       </Grid>\n//       {/* <Grid item> */}\n//       <Button variant=\"contained\" color=\"primary\"\n//         className={classes.button} style={{margin:15}}\n//         onClick={handleSubmit}>\n//         Login\n//       </Button>\n//       {/* </Grid> */}\n//     </form>\n//     </Grid>\n//     </div>\n//   );\n// }\n// // import React, {useState} from 'react';\n// // import LoginTopbar from '../components/LoginTopBar'\n// // import clsx from 'clsx';\n// // import { makeStyles } from '@material-ui/core/styles';\n// // import IconButton from '@material-ui/core/IconButton';\n// // import InputAdornment from '@material-ui/core/InputAdornment';\n// // import TextField from '@material-ui/core/TextField';\n// // import MenuItem from '@material-ui/core/MenuItem';\n// // import Visibility from '@material-ui/icons/Visibility';\n// // import VisibilityOff from '@material-ui/icons/VisibilityOff';\n// // import Grid from '@material-ui/core/Grid';\n// // //import { Button } from '@material-ui/core';\n// // //import { makeStyles } from '@material-ui/core/styles';\n// // import Button from '@material-ui/core/Button';\n// // import Logo from '../assets/69746894_1826895420789016_7438798866075353088_n.png';\n// // import ErrorWithStack from 'jest-util/build/ErrorWithStack';\n// // import { ERROR } from 'jest-validate/build/utils';\n// // // const ranges = [\n// // //   {\n// // //     value: '0-20',\n// // //     label: '0 to 20',\n// // //   },\n// // //   {\n// // //     value: '21-50',\n// // //     label: '21 to 50',\n// // //   },\n// // //   {\n// // //     value: '51-100',\n// // //     label: '51 to 100',\n// // //   },\n// // // ];\n// // const useStyles = makeStyles(theme => ({\n// //   root: {\n// //     display: 'flex',\n// //     flexWrap: 'wrap',\n// //   },\n// //   margin: {\n// //     margin: theme.spacing(2),\n// //   },\n// //   textField: {\n// //     flexBasis: 200,\n// //   },\n// //   itemGrid: {\n// //       marginTop: 150,\n// //   },\n// //   button: {\n// //     margin: theme.spacing(1),\n// //   },\n// //   input: {\n// //     display: 'none',\n// //   },\n// // }));\n// // export default function OutlinedInputAdornments() {\n// //   const classes = useStyles();\n// //   const [values, setValues] = React.useState({\n// //     //amount: '',\n// //     password: '',\n// //     //weight: '',\n// //     //weightRange: '',\n// //     showPassword: false,\n// //   });\n// // //   const [name, setName] = useState(\"\");\n// // //   const handleSubmit = (evt) => {\n// // //     evt.preventDefault();\n// // //     alert(`Submitting Name ${name}`);\n// // //   }\n// //   const handleChange = prop => event => {\n// //     setValues({ ...values, [prop]: event.target.value });\n// //     console.log(values.prop)\n// //   };\n// //   const handleClickShowPassword = () => {\n// //     setValues({ ...values, showPassword: !values.showPassword });\n// //   };\n// //   const handleMouseDownPassword = event => {\n// //     event.preventDefault();\n// //   };\n// // //   onSubmit = () => {\n// // //       const errors \n// // //   }\n// //   return (\n// //     <div className={classes.root}>\n// //     <LoginTopbar />\n// //     <Grid \n// //         container\n// //         spacing={2}\n// //         justify='center'\n// //         className={classes.itemGrid}\n// //     > \n// //     <img src={Logo}></img>\n// //       <form> \n// //       <Grid item>\n// //       <TextField\n// //         id=\"outlined-simple-start-adornment\"\n// //         className={clsx(classes.margin, classes.textField)}\n// //         variant=\"outlined\"\n// //         label=\"Username\"\n// //         placeholder=\"make it interesting\"\n// //         onChange={handleChange('name')}\n// //         value={values.prop}\n// //         // value={name}\n// //         // onChange={e => setName(e.target.value)}\n// //         // InputProps={{\n// //         //   startAdornment: <InputAdornment position=\"start\">Email/Name</InputAdornment>,\n// //         // }}\n// //         //ref=\"myField\"\n// //       />\n// //       </Grid>\n// //       {/* <TextField\n// //         select\n// //         className={clsx(classes.margin, classes.textField)}\n// //         variant=\"outlined\"\n// //         label=\"With Select\"\n// //         value={values.weightRange}\n// //         onChange={handleChange('weightRange')}\n// //         InputProps={{\n// //           startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n// //         }}\n// //       >\n// //         {ranges.map(option => (\n// //           <MenuItem key={option.value} value={option.value}>\n// //             {option.label}\n// //           </MenuItem>\n// //         ))}\n// //       </TextField> */}\n// //       {/* <TextField\n// //         id=\"outlined-adornment-amount\"\n// //         className={clsx(classes.margin, classes.textField)}\n// //         variant=\"outlined\"\n// //         label=\"Amount\"\n// //         value={values.amount}\n// //         onChange={handleChange('amount')}\n// //         InputProps={{\n// //           startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n// //         }}\n// //       /> */}\n// //       {/* <TextField\n// //         id=\"outlined-adornment-weight\"\n// //         className={clsx(classes.margin, classes.textField)}\n// //         variant=\"outlined\"\n// //         label=\"Weight\"\n// //         value={values.weight}\n// //         onChange={handleChange('weight')}\n// //         helperText=\"Weight\"\n// //         InputProps={{\n// //           endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n// //         }}\n// //       /> */}\n// //       <Grid item>\n// //       <TextField\n// //         id=\"outlined-adornment-password\"\n// //         className={clsx(classes.margin, classes.textField)}\n// //         variant=\"outlined\"\n// //         type={values.showPassword ? 'text' : 'password'}\n// //         label=\"Password\"\n// //         value={values.password}\n// //         placeholder=\"make it secure\"\n// //         onChange={handleChange('password')}\n// //         InputProps={{\n// //           endAdornment: (\n// //             <InputAdornment position=\"end\">\n// //               <IconButton\n// //                 edge=\"end\"\n// //                 aria-label=\"toggle password visibility\"\n// //                 onClick={handleClickShowPassword}\n// //                 onMouseDown={handleMouseDownPassword}\n// //               >\n// //                 {values.showPassword ? <VisibilityOff /> : <Visibility />}\n// //               </IconButton>\n// //             </InputAdornment>\n// //           ),\n// //         }}\n// //       />\n// //       </Grid>\n// //       {/* <Grid item> */}\n// //       <Button variant=\"contained\" color=\"primary\" className={classes.button} style={{margin:15}}>\n// //         Login\n// //       </Button>\n// //       {/* </Grid> */}\n// //     </form>\n// //     </Grid>\n// //     </div>\n// //   );\n// // }","map":{"version":3,"sources":["/Users/austinvuong/AuthentiCar/src/containers/LoginContainer.js"],"names":["React","useState","useContext","LoginTopbar","clsx","makeStyles","IconButton","InputAdornment","TextField","MenuItem","Visibility","VisibilityOff","Grid","Link","LoginContext","Button","ErrorWithStack","ERROR","useStyles","theme","root","display","flexWrap","margin","spacing","textField","flexBasis","itemGrid","marginTop","button","input","OutlinedInputAdornments","classes","loginContext","nameError","passwordError","password","showPassword","values","setValues","handleSubmit","event","name","valid","trim","length","preventDefault","prop","addToLogin","handleChange","target","value","console","log","handleClickShowPassword","handleMouseDownPassword","endAdornment"],"mappings":"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,EAAC,GAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnGA,CAPF,CAFA,CAFF;AA2HD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState, useContext} from 'react';\nimport LoginTopbar from '../components/LoginTopBar'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport LoginContext from '../contexts/LoginContext';\n//import { Button } from '@material-ui/core';\n//import { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n// import Logo from '../assets/69746894_1826895420789016_7438798866075353088_n.png';\nimport ErrorWithStack from 'jest-util/build/ErrorWithStack';\nimport { ERROR } from 'jest-validate/build/utils';\n\n\n// const ranges = [\n//   {\n//     value: '0-20',\n//     label: '0 to 20',\n//   },\n//   {\n//     value: '21-50',\n//     label: '21 to 50',\n//   },\n//   {\n//     value: '51-100',\n//     label: '51 to 100',\n//   },\n// ];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(2),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n  itemGrid: {\n      marginTop: 150,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\n\nexport default function OutlinedInputAdornments() {\n  const classes = useStyles();\n  const loginContext = useContext(LoginContext);\n  const [values, setValues] = React.useState({\n    //amount: '',\n    nameError: null,\n    passwordError: null,\n    password: '',\n    //weight: '',\n    //weightRange: '',\n    showPassword: false,\n  });\n\n//   const [name, setName] = useState(\"\");\n    \n//   const handleSubmit = (evt) => {\n//     evt.preventDefault();\n//     alert(`Submitting Name ${name}`);\n    \n//   }\n\n  const handleSubmit = (event) => {\n    let nameError = null;\n    let passwordError = null;\n    let password = values.password\n    let name = values.name;\n    let valid = true;\n    if (name == null || name.trim() === '') {\n      nameError = 'name cannot be empty';\n      valid = false;\n    } else if (name.length > 32) {\n      nameError = 'name cannot be longer than 32 chars';\n      valid = false;\n    } else if (name.length < 6) {\n      nameError = 'name cannot be shorter than 6 chars';\n      valid = false;\n    }\n\n    if (password == null || password.trim() === '') {\n        passwordError = 'password cannot be empty'\n        valid = false;\n    }\n    setValues({ ...values, nameError, passwordError });\n    if (nameError || passwordError) {\n      event.preventDefault();\n    }\n\n    if (values.prop === 'mechanic@authenticar.com') {\n      loginContext.addToLogin(values.prop);\n    }\n\n    return valid;\n  }\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n    console.log(values.prop)\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n\n  \n//   onSubmit = () => {\n//       const errors \n//   }\n\n  return (\n\n    <div className={classes.root}>\n    <LoginTopbar />\n    <Grid \n        container\n        spacing={2}\n        justify='center'\n        className={classes.itemGrid}\n    > \n    <img src={`assets/69746894_1826895420789016_7438798866075353088_n.png`}></img>\n      <form> \n      \n          \n          \n      <Grid item>\n\n          \n      <TextField\n        id=\"outlined-simple-start-adornment\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"Username\"\n        error={values.nameError}\n        helperText={values.nameError}\n        placeholder=\"make it interesting\"\n        onChange={handleChange('name')}\n        value={values.prop}\n        // value={name}\n        // onChange={e => setName(e.target.value)}\n        // InputProps={{\n        //   startAdornment: <InputAdornment position=\"start\">Email/Name</InputAdornment>,\n        // }}\n        //ref=\"myField\"\n\n      />\n      </Grid>\n      {/* <TextField\n        select\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"With Select\"\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField> */}\n      {/* <TextField\n        id=\"outlined-adornment-amount\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"Amount\"\n        value={values.amount}\n        onChange={handleChange('amount')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n        }}\n      /> */}\n      {/* <TextField\n        id=\"outlined-adornment-weight\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"Weight\"\n        value={values.weight}\n        onChange={handleChange('weight')}\n        helperText=\"Weight\"\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n        }}\n      /> */}\n      <Grid item>\n\n      \n      <TextField\n        id=\"outlined-adornment-password\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        type={values.showPassword ? 'text' : 'password'}\n        label=\"Password\"\n        error={values.passwordError}\n        helperText={values.passwordError}\n        value={values.password}\n\n        placeholder=\"make it secure\"\n\n        onChange={handleChange('password')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                edge=\"end\"\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n              >\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n      </Grid>\n      {/* <Grid item> */}\n      <Button variant=\"contained\" color=\"primary\"\n        className={classes.button} style={{margin:15}}\n        onClick={handleSubmit}\n        component={Link}\n        to='/'\n        >\n        Login\n      </Button>\n      {/* </Grid> */}\n    </form>\n    </Grid>\n    </div>\n  );\n}\n\n\n// import React, {useState} from 'react';\n// import LoginTopbar from '../components/LoginTopBar'\n// import clsx from 'clsx';\n// import { makeStyles } from '@material-ui/core/styles';\n// import IconButton from '@material-ui/core/IconButton';\n// import InputAdornment from '@material-ui/core/InputAdornment';\n// import TextField from '@material-ui/core/TextField';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Visibility from '@material-ui/icons/Visibility';\n// import VisibilityOff from '@material-ui/icons/VisibilityOff';\n// import Grid from '@material-ui/core/Grid';\n// //import { Button } from '@material-ui/core';\n// //import { makeStyles } from '@material-ui/core/styles';\n// import Button from '@material-ui/core/Button';\n// import Logo from '../assets/69746894_1826895420789016_7438798866075353088_n.png';\n// import ErrorWithStack from 'jest-util/build/ErrorWithStack';\n// import { ERROR } from 'jest-validate/build/utils';\n\n\n// // const ranges = [\n// //   {\n// //     value: '0-20',\n// //     label: '0 to 20',\n// //   },\n// //   {\n// //     value: '21-50',\n// //     label: '21 to 50',\n// //   },\n// //   {\n// //     value: '51-100',\n// //     label: '51 to 100',\n// //   },\n// // ];\n\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//   },\n//   margin: {\n//     margin: theme.spacing(2),\n//   },\n//   textField: {\n//     flexBasis: 200,\n//   },\n//   itemGrid: {\n//       marginTop: 150,\n//   },\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   input: {\n//     display: 'none',\n//   },\n// }));\n\n\n// export default function OutlinedInputAdornments() {\n//   const classes = useStyles();\n//   const [values, setValues] = React.useState({\n//     //amount: '',\n//     nameError: null,\n//     password: '',\n//     //weight: '',\n//     //weightRange: '',\n//     showPassword: false,\n//   });\n\n// //   const [name, setName] = useState(\"\");\n    \n// //   const handleSubmit = (evt) => {\n// //     evt.preventDefault();\n// //     alert(`Submitting Name ${name}`);\n    \n// //   }\n\n//   const handleSubmit = () => {\n//     let nameError = null;\n//     let name = values.name;\n//     if (name == null || name.trim() === '') {\n//       nameError = 'name cannot be empty';\n//     } else if (name.length > 32) {\n//       nameError = 'name cannot be longer than 32 chars';\n//     } else if (name.length < 6) {\n//       nameError = 'name cannot be shorter than 6 chars';\n//     }\n//     setValues({ ...values, nameError });\n//   }\n\n//   const handleChange = prop => event => {\n//     setValues({ ...values, [prop]: event.target.value });\n//     console.log(values.prop)\n//   };\n\n//   const handleClickShowPassword = () => {\n//     setValues({ ...values, showPassword: !values.showPassword });\n//   };\n\n//   const handleMouseDownPassword = event => {\n//     event.preventDefault();\n//   };\n\n\n  \n// //   onSubmit = () => {\n// //       const errors \n// //   }\n\n//   return (\n\n//     <div className={classes.root}>\n//     <LoginTopbar />\n//     <Grid \n//         container\n//         spacing={2}\n//         justify='center'\n//         className={classes.itemGrid}\n//     > \n//     <img src={Logo}></img>\n//       <form> \n      \n          \n          \n//       <Grid item>\n\n          \n//       <TextField\n//         id=\"outlined-simple-start-adornment\"\n//         className={clsx(classes.margin, classes.textField)}\n//         variant=\"outlined\"\n//         label=\"Username\"\n//         placeholder=\"make it interesting\"\n//         onChange={handleChange('name')}\n//         value={values.prop}\n//         // value={name}\n//         // onChange={e => setName(e.target.value)}\n//         // InputProps={{\n//         //   startAdornment: <InputAdornment position=\"start\">Email/Name</InputAdornment>,\n//         // }}\n//         //ref=\"myField\"\n\n//       />\n//       {values.nameError ? <p>{values.nameError}</p> : ''}\n//       </Grid>\n//       {/* <TextField\n//         select\n//         className={clsx(classes.margin, classes.textField)}\n//         variant=\"outlined\"\n//         label=\"With Select\"\n//         value={values.weightRange}\n//         onChange={handleChange('weightRange')}\n//         InputProps={{\n//           startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n//         }}\n//       >\n//         {ranges.map(option => (\n//           <MenuItem key={option.value} value={option.value}>\n//             {option.label}\n//           </MenuItem>\n//         ))}\n//       </TextField> */}\n//       {/* <TextField\n//         id=\"outlined-adornment-amount\"\n//         className={clsx(classes.margin, classes.textField)}\n//         variant=\"outlined\"\n//         label=\"Amount\"\n//         value={values.amount}\n//         onChange={handleChange('amount')}\n//         InputProps={{\n//           startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n//         }}\n//       /> */}\n//       {/* <TextField\n//         id=\"outlined-adornment-weight\"\n//         className={clsx(classes.margin, classes.textField)}\n//         variant=\"outlined\"\n//         label=\"Weight\"\n//         value={values.weight}\n//         onChange={handleChange('weight')}\n//         helperText=\"Weight\"\n//         InputProps={{\n//           endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n//         }}\n//       /> */}\n//       <Grid item>\n\n      \n//       <TextField\n//         id=\"outlined-adornment-password\"\n//         className={clsx(classes.margin, classes.textField)}\n//         variant=\"outlined\"\n//         type={values.showPassword ? 'text' : 'password'}\n//         label=\"Password\"\n//         value={values.password}\n\n//         placeholder=\"make it secure\"\n\n//         onChange={handleChange('password')}\n//         InputProps={{\n//           endAdornment: (\n//             <InputAdornment position=\"end\">\n//               <IconButton\n//                 edge=\"end\"\n//                 aria-label=\"toggle password visibility\"\n//                 onClick={handleClickShowPassword}\n//                 onMouseDown={handleMouseDownPassword}\n//               >\n//                 {values.showPassword ? <VisibilityOff /> : <Visibility />}\n//               </IconButton>\n//             </InputAdornment>\n//           ),\n//         }}\n//       />\n//       </Grid>\n//       {/* <Grid item> */}\n//       <Button variant=\"contained\" color=\"primary\"\n//         className={classes.button} style={{margin:15}}\n//         onClick={handleSubmit}>\n//         Login\n//       </Button>\n//       {/* </Grid> */}\n//     </form>\n//     </Grid>\n//     </div>\n//   );\n// }\n\n\n// // import React, {useState} from 'react';\n// // import LoginTopbar from '../components/LoginTopBar'\n// // import clsx from 'clsx';\n// // import { makeStyles } from '@material-ui/core/styles';\n// // import IconButton from '@material-ui/core/IconButton';\n// // import InputAdornment from '@material-ui/core/InputAdornment';\n// // import TextField from '@material-ui/core/TextField';\n// // import MenuItem from '@material-ui/core/MenuItem';\n// // import Visibility from '@material-ui/icons/Visibility';\n// // import VisibilityOff from '@material-ui/icons/VisibilityOff';\n// // import Grid from '@material-ui/core/Grid';\n// // //import { Button } from '@material-ui/core';\n// // //import { makeStyles } from '@material-ui/core/styles';\n// // import Button from '@material-ui/core/Button';\n// // import Logo from '../assets/69746894_1826895420789016_7438798866075353088_n.png';\n// // import ErrorWithStack from 'jest-util/build/ErrorWithStack';\n// // import { ERROR } from 'jest-validate/build/utils';\n\n\n// // // const ranges = [\n// // //   {\n// // //     value: '0-20',\n// // //     label: '0 to 20',\n// // //   },\n// // //   {\n// // //     value: '21-50',\n// // //     label: '21 to 50',\n// // //   },\n// // //   {\n// // //     value: '51-100',\n// // //     label: '51 to 100',\n// // //   },\n// // // ];\n\n// // const useStyles = makeStyles(theme => ({\n// //   root: {\n// //     display: 'flex',\n// //     flexWrap: 'wrap',\n// //   },\n// //   margin: {\n// //     margin: theme.spacing(2),\n// //   },\n// //   textField: {\n// //     flexBasis: 200,\n// //   },\n// //   itemGrid: {\n// //       marginTop: 150,\n// //   },\n// //   button: {\n// //     margin: theme.spacing(1),\n// //   },\n// //   input: {\n// //     display: 'none',\n// //   },\n// // }));\n\n\n// // export default function OutlinedInputAdornments() {\n// //   const classes = useStyles();\n// //   const [values, setValues] = React.useState({\n// //     //amount: '',\n// //     password: '',\n// //     //weight: '',\n// //     //weightRange: '',\n// //     showPassword: false,\n// //   });\n\n// // //   const [name, setName] = useState(\"\");\n    \n// // //   const handleSubmit = (evt) => {\n// // //     evt.preventDefault();\n// // //     alert(`Submitting Name ${name}`);\n    \n// // //   }\n\n// //   const handleChange = prop => event => {\n// //     setValues({ ...values, [prop]: event.target.value });\n// //     console.log(values.prop)\n// //   };\n\n// //   const handleClickShowPassword = () => {\n// //     setValues({ ...values, showPassword: !values.showPassword });\n// //   };\n\n// //   const handleMouseDownPassword = event => {\n// //     event.preventDefault();\n// //   };\n\n\n  \n// // //   onSubmit = () => {\n// // //       const errors \n// // //   }\n\n// //   return (\n\n// //     <div className={classes.root}>\n// //     <LoginTopbar />\n// //     <Grid \n// //         container\n// //         spacing={2}\n// //         justify='center'\n// //         className={classes.itemGrid}\n// //     > \n// //     <img src={Logo}></img>\n// //       <form> \n      \n          \n          \n// //       <Grid item>\n\n          \n// //       <TextField\n// //         id=\"outlined-simple-start-adornment\"\n// //         className={clsx(classes.margin, classes.textField)}\n// //         variant=\"outlined\"\n// //         label=\"Username\"\n// //         placeholder=\"make it interesting\"\n// //         onChange={handleChange('name')}\n// //         value={values.prop}\n// //         // value={name}\n// //         // onChange={e => setName(e.target.value)}\n// //         // InputProps={{\n// //         //   startAdornment: <InputAdornment position=\"start\">Email/Name</InputAdornment>,\n// //         // }}\n// //         //ref=\"myField\"\n\n// //       />\n// //       </Grid>\n// //       {/* <TextField\n// //         select\n// //         className={clsx(classes.margin, classes.textField)}\n// //         variant=\"outlined\"\n// //         label=\"With Select\"\n// //         value={values.weightRange}\n// //         onChange={handleChange('weightRange')}\n// //         InputProps={{\n// //           startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n// //         }}\n// //       >\n// //         {ranges.map(option => (\n// //           <MenuItem key={option.value} value={option.value}>\n// //             {option.label}\n// //           </MenuItem>\n// //         ))}\n// //       </TextField> */}\n// //       {/* <TextField\n// //         id=\"outlined-adornment-amount\"\n// //         className={clsx(classes.margin, classes.textField)}\n// //         variant=\"outlined\"\n// //         label=\"Amount\"\n// //         value={values.amount}\n// //         onChange={handleChange('amount')}\n// //         InputProps={{\n// //           startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n// //         }}\n// //       /> */}\n// //       {/* <TextField\n// //         id=\"outlined-adornment-weight\"\n// //         className={clsx(classes.margin, classes.textField)}\n// //         variant=\"outlined\"\n// //         label=\"Weight\"\n// //         value={values.weight}\n// //         onChange={handleChange('weight')}\n// //         helperText=\"Weight\"\n// //         InputProps={{\n// //           endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n// //         }}\n// //       /> */}\n// //       <Grid item>\n\n      \n// //       <TextField\n// //         id=\"outlined-adornment-password\"\n// //         className={clsx(classes.margin, classes.textField)}\n// //         variant=\"outlined\"\n// //         type={values.showPassword ? 'text' : 'password'}\n// //         label=\"Password\"\n// //         value={values.password}\n\n// //         placeholder=\"make it secure\"\n\n// //         onChange={handleChange('password')}\n// //         InputProps={{\n// //           endAdornment: (\n// //             <InputAdornment position=\"end\">\n// //               <IconButton\n// //                 edge=\"end\"\n// //                 aria-label=\"toggle password visibility\"\n// //                 onClick={handleClickShowPassword}\n// //                 onMouseDown={handleMouseDownPassword}\n// //               >\n// //                 {values.showPassword ? <VisibilityOff /> : <Visibility />}\n// //               </IconButton>\n// //             </InputAdornment>\n// //           ),\n// //         }}\n// //       />\n// //       </Grid>\n// //       {/* <Grid item> */}\n// //       <Button variant=\"contained\" color=\"primary\" className={classes.button} style={{margin:15}}>\n// //         Login\n// //       </Button>\n// //       {/* </Grid> */}\n// //     </form>\n// //     </Grid>\n// //     </div>\n// //   );\n// // }"]},"metadata":{},"sourceType":"module"}