{"ast":null,"code":"import _slicedToArray from \"/Users/austinvuong/AuthentiCar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/austinvuong/AuthentiCar/src/containers/AccountContainer.js\";\nimport React, { useContext } from 'react';\nimport SavedContext from '../contexts/SavedContext';\nimport SavedCarComponent from '../components/SavedCarComponent';\nimport data from '../constants/car-items.json';\nimport Grid from '@material-ui/core/Grid'; // import hondaNsx from '../assets/honda.jpg';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountTopBar from '../components/AccountTopBar';\nimport SavedNoItems from '../components/SavedNoItems';\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\"; // import StreamContext from '../contexts/StreamContext';\n// import { descriptions } from 'jest-config';\n\nconst BigInt = JSBI.BigInt;\nconst useStyles = makeStyles(theme => ({\n  itemGrid: {\n    marginTop: 64\n  }\n}));\n\nconst getItemFromId = id => data.items.filter(x => x.id === id)[0];\n\nconst AccountContainer = props => {\n  const classes = useStyles();\n  const savedContext = useContext(SavedContext);\n  const savedFrom = savedContext.saved;\n\n  const _useWavelet = useWavelet('https://testnet.perlin.net'),\n        _useWavelet2 = _slicedToArray(_useWavelet, 3),\n        client = _useWavelet2[0],\n        node = _useWavelet2[1],\n        clientErr = _useWavelet2[2];\n\n  const _useAccount = useAccount(client, '315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612'),\n        _useAccount2 = _slicedToArray(_useAccount, 2),\n        account = _useAccount2[0],\n        accountErr = _useAccount2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        carLogs = _useState2[0],\n        setCarLogs = _useState2[1];\n\n  const onUpdate = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n  }, []);\n  const onLoad = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n  }, []);\n\n  const _useContract = useContract(client, 'eec84af3d99c3fe26745a6da0cfa23029c3724ea725a49e91b1c5987335ca749', onUpdate, onLoad),\n        _useContract2 = _slicedToArray(_useContract, 1),\n        contract = _useContract2[0];\n\n  return React.createElement(React.Fragment, null, React.createElement(AccountTopBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    className: classes.itemGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, savedContext.count > 0 ? Object.keys(savedFrom).map(vin => React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(SavedCarComponent, {\n    key: vin,\n    vin: vin,\n    carName: getItemFromId(vin).carName,\n    carImage: getItemFromId(vin).image,\n    description: getItemFromId(vin).description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))) : React.createElement(SavedNoItems, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })));\n};\n\nexport default AccountContainer;","map":{"version":3,"sources":["/Users/austinvuong/AuthentiCar/src/containers/AccountContainer.js"],"names":["React","useContext","SavedContext","SavedCarComponent","data","Grid","makeStyles","AccountTopBar","SavedNoItems","useWavelet","useAccount","useContract","Wavelet","JSBI","BigInt","useStyles","theme","itemGrid","marginTop","getItemFromId","id","items","filter","x","AccountContainer","props","classes","savedContext","savedFrom","saved","client","node","clientErr","account","accountErr","useState","carLogs","setCarLogs","onUpdate","useCallback","contract","wallet","loadWalletFromPrivateKey","test","logs","onLoad","count","Object","keys","map","vin","carName","image","description"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport SavedContext from '../contexts/SavedContext';\nimport SavedCarComponent from '../components/SavedCarComponent';\nimport data from '../constants/car-items.json'\nimport Grid from '@material-ui/core/Grid';\n// import hondaNsx from '../assets/honda.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountTopBar from '../components/AccountTopBar';\nimport SavedNoItems from '../components/SavedNoItems';\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\";\n// import StreamContext from '../contexts/StreamContext';\n// import { descriptions } from 'jest-config';\nconst BigInt = JSBI.BigInt;\n\n\nconst useStyles = makeStyles(theme => ({\n    itemGrid: {\n        marginTop: 64,\n    }\n\n}))\n\nconst getItemFromId = id => data.items.filter(x => x.id === id)[0];\n\nconst AccountContainer = (props) => {\n    const classes = useStyles();\n    const savedContext = useContext(SavedContext);\n    const savedFrom = savedContext.saved;\n\n    const [client, node, clientErr] = useWavelet('https://testnet.perlin.net');\n    const [account, accountErr] = useAccount(client, '315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    const [carLogs, setCarLogs] = useState([]);\n  \n    const onUpdate = useCallback((contract) => {\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n    }, []);\n  \n    const onLoad = useCallback((contract) => {\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      setCarLogs(contract.test(wallet,'get_cars', BigInt(0)).logs);\n    }, []);\n  \n    const [contract] = useContract(client, 'eec84af3d99c3fe26745a6da0cfa23029c3724ea725a49e91b1c5987335ca749', onUpdate, onLoad);\n\n\n\n\n\n\n    return (\n    <>\n        <AccountTopBar />\n        <Grid \n            container \n            spacing={2} \n            justify='center' \n            className={classes.itemGrid}\n        >\n            {savedContext.count > 0 ? (\n            Object.keys(savedFrom).map(vin => (\n                <Grid item>\n                    <SavedCarComponent \n                        key = {vin}\n                        vin = {vin}\n                        carName={getItemFromId(vin).carName}\n                        carImage={getItemFromId(vin).image}\n                        description={getItemFromId(vin).description}\n\n                    />\n                </Grid>\n            ))\n            ) : (\n                <SavedNoItems />\n            )}\n            \n         </Grid>\n    </>\n\n    )\n}\n\nexport default AccountContainer;"]},"metadata":{},"sourceType":"module"}