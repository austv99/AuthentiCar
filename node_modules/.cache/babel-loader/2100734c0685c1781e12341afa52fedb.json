{"ast":null,"code":"import _slicedToArray from \"/Users/austinvuong/AuthentiCar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/austinvuong/AuthentiCar/src/containers/CarContainer.js\";\nimport React, { useContext, useState, useCallback } from 'react';\nimport TopBar from '../components/TopBar'; // import CarComponent from '../components/CarComponent';\n\nimport Grid from '@material-ui/core/Grid'; // import hondaNsx from '../assets/honda.jpg';\n\nimport { makeStyles } from '@material-ui/core/styles'; // import Typography from '@material-ui/core/Typography';\n\nimport data from '../constants/car-items.json';\nimport PropsContext from '../contexts/PropsContext';\nimport CarDisplayComponent from '../components/CarDisplayComponent';\nimport SavedNoItems from '../components/SavedNoItems'; // import PropsContext from '../contexts/PropsContext';\n\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\"; // import StreamContext from '../contexts/StreamContext';\n// import { descriptions } from 'jest-config';\n\nconst BigInt = JSBI.BigInt;\nconst useStyles = makeStyles(theme => ({\n  itemGrid: {\n    marginTop: 64\n  },\n  media: {\n    height: 245\n  }\n}));\n\nconst getItemFromId = id => data.items.filter(x => x.id === id)[0];\n\nconst CarContainer = props => {\n  // const propsContext = useContext(PropsContext);\n  const classes = useStyles();\n  const propsContext = useContext(PropsContext); // const key = propsContext.savedProps.pop();\n\n  console.log(propsContext.savedProps);\n\n  const _useWavelet = useWavelet('https://testnet.perlin.net'),\n        _useWavelet2 = _slicedToArray(_useWavelet, 3),\n        client = _useWavelet2[0],\n        node = _useWavelet2[1],\n        clientErr = _useWavelet2[2];\n\n  const _useAccount = useAccount(client, '315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612'),\n        _useAccount2 = _slicedToArray(_useAccount, 2),\n        account = _useAccount2[0],\n        accountErr = _useAccount2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        carLogs = _useState2[0],\n        setCarLogs = _useState2[1];\n\n  const onUpdate = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n  }, []);\n  const onLoad = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n  }, []);\n\n  const _useContract = useContract(client, 'eec84af3d99c3fe26745a6da0cfa23029c3724ea725a49e91b1c5987335ca749', onUpdate, onLoad),\n        _useContract2 = _slicedToArray(_useContract, 1),\n        contract = _useContract2[0];\n\n  let entryRes = [];\n  let comp = [];\n  let carLogsLength = carLogs.length;\n\n  for (var i = 0; i < carLogsLength; i++) {\n    entryRes = carLogs[i].split('\\n');\n  }\n\n  let entryResLength = entryRes.length;\n\n  for (var j = 0; j < entryResLength; j++) {\n    let stringRes = entryRes[j].split('|');\n\n    if (stringRes[1] === key) {\n      let carName = stringRes[0];\n      let carVin = stringRes[1]; // streamContext.addToStream(stringRes[1]);\n\n      let carOwner = stringRes[2];\n      let carOdometer = stringRes[3];\n      let carImage = '';\n\n      if (carName.toUpperCase() === 'HONDA NSX') {\n        carImage = 'honda_nsx.jpg';\n      }\n\n      comp.push(React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(CarDisplayComponent, {\n        carName: carName,\n        carVin: carVin,\n        carOwner: carOwner,\n        carOdometer: carOdometer,\n        carImage: carImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })));\n    }\n  } // useEffect(() => {\n  //     console.log(\"here\");\n  //     {Object.keys(propsContext.savedProps).map(x => (\n  //         propsContext.removeFromSavedProps(x)\n  //     ))}\n  // })\n\n\n  return React.createElement(React.Fragment, null, React.createElement(TopBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    className: classes.itemGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, propsContext.countProps > 0 ? Object.keys(propsContext.savedProps).map(id => React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(CarDisplayComponent, {\n    key: id,\n    id: id,\n    title: getItemFromId(id).title,\n    image: getItemFromId(id).image,\n    description: getItemFromId(id).description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }))) : React.createElement(SavedNoItems, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })));\n};\n\nexport default CarContainer;","map":{"version":3,"sources":["/Users/austinvuong/AuthentiCar/src/containers/CarContainer.js"],"names":["React","useContext","useState","useCallback","TopBar","Grid","makeStyles","data","PropsContext","CarDisplayComponent","SavedNoItems","useWavelet","useAccount","useContract","Wavelet","JSBI","BigInt","useStyles","theme","itemGrid","marginTop","media","height","getItemFromId","id","items","filter","x","CarContainer","props","classes","propsContext","console","log","savedProps","client","node","clientErr","account","accountErr","carLogs","setCarLogs","onUpdate","contract","wallet","loadWalletFromPrivateKey","test","logs","onLoad","entryRes","comp","carLogsLength","length","i","split","entryResLength","j","stringRes","key","carName","carVin","carOwner","carOdometer","carImage","toUpperCase","push","countProps","Object","keys","map","title","image","description"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useCallback} from 'react';\nimport TopBar from '../components/TopBar';\n// import CarComponent from '../components/CarComponent';\nimport Grid from '@material-ui/core/Grid';\n// import hondaNsx from '../assets/honda.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\nimport data from '../constants/car-items.json'\nimport PropsContext from '../contexts/PropsContext';\nimport CarDisplayComponent from '../components/CarDisplayComponent';\nimport SavedNoItems from '../components/SavedNoItems';\n// import PropsContext from '../contexts/PropsContext';\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\";\n// import StreamContext from '../contexts/StreamContext';\n// import { descriptions } from 'jest-config';\nconst BigInt = JSBI.BigInt;\n\n\n\nconst useStyles = makeStyles(theme => ({\n    itemGrid: {\n        marginTop: 64,\n    },\n    media: {\n        height: 245,\n    }\n\n}))\n\nconst getItemFromId = id => data.items.filter(x => x.id === id)[0];\n\n\nconst CarContainer = props => {\n    // const propsContext = useContext(PropsContext);\n    \n    const classes = useStyles();\n    const propsContext = useContext(PropsContext);\n    // const key = propsContext.savedProps.pop();\n    console.log(propsContext.savedProps);\n\n    const [client, node, clientErr] = useWavelet('https://testnet.perlin.net');\n    const [account, accountErr] = useAccount(client, '315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    const [carLogs, setCarLogs] = useState([]);\n  \n    const onUpdate = useCallback((contract) => {\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n    }, []);\n  \n    const onLoad = useCallback((contract) => {\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      setCarLogs(contract.test(wallet,'get_cars', BigInt(0)).logs);\n    }, []);\n  \n    const [contract] = useContract(client, 'eec84af3d99c3fe26745a6da0cfa23029c3724ea725a49e91b1c5987335ca749', onUpdate, onLoad);\n\n    let entryRes = []\n    let comp = []\n    let carLogsLength = carLogs.length;\n        for (var i = 0; i < carLogsLength; i++) {\n            entryRes = carLogs[i].split('\\n');\n        }\n        let entryResLength = entryRes.length;\n        for (var j = 0; j < entryResLength; j++) {\n            let stringRes = entryRes[j].split('|');\n            if (stringRes[1] === key) {\n                let carName = stringRes[0];\n                let carVin = stringRes[1];\n                // streamContext.addToStream(stringRes[1]);\n                let carOwner = stringRes[2];\n                let carOdometer = stringRes[3];\n                let carImage = '';\n                if (carName.toUpperCase() === 'HONDA NSX') {\n                    carImage = 'honda_nsx.jpg'\n                }\n                comp.push(<Grid item> \n                <CarDisplayComponent\n                    carName={carName}\n                    carVin={carVin}\n                    carOwner={carOwner}\n                    carOdometer={carOdometer}\n                    carImage={carImage} />\n                </Grid>)\n\n            }\n        }\n        \n\n    // useEffect(() => {\n    //     console.log(\"here\");\n    //     {Object.keys(propsContext.savedProps).map(x => (\n    //         propsContext.removeFromSavedProps(x)\n    //     ))}\n    // })\n    return (\n    <>\n    <TopBar />\n    <Grid \n            container \n            spacing={2} \n            justify='center' \n            className={classes.itemGrid}\n        >\n            {propsContext.countProps > 0 ? (\n            Object.keys(propsContext.savedProps).map(id => (\n                <Grid item>\n                    <CarDisplayComponent\n                        key = {id}\n                        id = {id}\n                        title={getItemFromId(id).title}\n                        image={getItemFromId(id).image}\n                        description={getItemFromId(id).description}\n\n                    />\n                </Grid>\n            )))\n             : (\n                <SavedNoItems />\n            )\n            }\n            \n            \n            \n\n\n            \n         </Grid>\n     </>\n    )\n};\n\nexport default CarContainer; "]},"metadata":{},"sourceType":"module"}