{"ast":null,"code":"import _defineProperty from \"/Users/austinvuong/AuthentiCar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/austinvuong/AuthentiCar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/austinvuong/AuthentiCar/src/containers/LogContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useState } from 'react'; // import clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles'; // import MenuItem from '@material-ui/core/MenuItem';\n\nimport TextField from '@material-ui/core/TextField';\nimport AccountTopBar from '../components/AccountTopBar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\";\nimport MenuItem from '@material-ui/core/MenuItem'; // import { descriptions } from 'jest-config';\n\nconst BigInt = JSBI.BigInt;\nconst gearbox = [{\n  value: 'automatic',\n  label: 'Automatic'\n}, {\n  value: 'manual',\n  label: 'Manual'\n}];\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(12),\n    marginRight: theme.spacing(0)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  },\n  itemGrid: {\n    marginTop: 64\n  }\n}));\n\nconst LogContainer = props => {\n  const classes = useStyles(); // let id = 0;\n\n  const _useWavelet = useWavelet('https://testnet.perlin.net'),\n        _useWavelet2 = _slicedToArray(_useWavelet, 3),\n        client = _useWavelet2[0],\n        node = _useWavelet2[1],\n        clientErr = _useWavelet2[2];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        carLogs = _useState2[0],\n        setCarLogs = _useState2[1];\n\n  const onUpdate = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n  }, []);\n  const onLoad = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n  }, []);\n\n  const _useContract = useContract(client, '28e0ea3defced9bac9d3dcc60d2d58d57bf3cb4d874b89e5ea2943e47bead49f', onUpdate, onLoad),\n        _useContract2 = _slicedToArray(_useContract, 1),\n        contract = _useContract2[0]; // console.log(carLogs);\n\n\n  const logCar = (name, vin, owner, odometer, year, type, gearbox, accidents, maintenance) => {\n    // const car = name + '|' + vin + '|' + owner + '|' + odometer;\n    const car = {\n      carName: name,\n      carVin: vin,\n      carOwner: owner,\n      carOdometer: odometer,\n      carYear: year,\n      carType: type,\n      carGearbox: gearbox,\n      carAccidents: accidents,\n      carMaintenance: maintenance // var carLogsLength = carLogs.length;\n      // const carArray = car.split('|');\n\n    };\n    var valid = true;\n    let res = [];\n    let empty = false;\n\n    for (var i = 0; i < carLogs.length; i++) {\n      if (carLogs[i] === \"\") {\n        empty = true;\n      }\n\n      res = carLogs[i].split('\\n');\n    }\n\n    if (!empty) {\n      for (var i = 0; i < res.length; i++) {\n        let stringRes = JSON.parse(res[i]);\n\n        if (stringRes.vin === vin) {\n          valid = false;\n        }\n      }\n    } // for (var i = 0; i < carLogsLength; i++) {\n    //   let res = carLogs[i].split('\\n');\n    //   console.log(res);\n    //   JSON.parse(carLogs[i])\n    //   if (res[1] === carArray[1]) {\n    //     console.log('passed here');\n    //     valid = false;\n    //   }\n    // }\n\n\n    console.log(typeof contract);\n\n    if (valid) {\n      console.log('test');\n      JSON.stringify(car);\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      contract && contract.call(wallet, 'log_car', BigInt(0), BigInt(25000), BigInt(0), {\n        type: 'string',\n        value: car\n      });\n    }\n  };\n\n  const _React$useState = React.useState({\n    name: '',\n    vin: '',\n    owner: '',\n    odometer: '',\n    year: '',\n    type: '',\n    gearbox: '',\n    accidents: '',\n    maintenance: ''\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const manValid = false;\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(AccountTopBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    justify: \"center\",\n    className: classes.itemGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Car Log Form\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-error\",\n    label: \"Car Name\",\n    className: classes.textField,\n    onChange: handleChange('name'),\n    value: values.name,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-error\",\n    label: \"VIN\",\n    className: classes.textField,\n    onChange: handleChange('vin'),\n    value: values.vin,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-error\",\n    label: \"Owner\",\n    className: classes.textField,\n    onChange: handleChange('owner'),\n    value: values.owner,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-error\",\n    label: \"Odometer\",\n    className: classes.textField,\n    onChange: handleChange('odometer'),\n    value: values.odometer,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-error\",\n    label: \"Year\",\n    className: classes.textField,\n    onChange: handleChange('year'),\n    value: values.year,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-error\",\n    label: \"Type\",\n    className: classes.textField,\n    onChange: handleChange('type'),\n    value: values.type,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"Transmission\",\n    className: classes.textField,\n    value: values.gearbox,\n    onChange: handleChange('gearbox'),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    helperText: \"Please select type\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, gearbox.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, option.label))), React.createElement(TextField, {\n    id: \"outlined-multiline-flexible\",\n    label: \"Accidents\",\n    multiline: true,\n    rowsMax: \"4\",\n    value: values.accidents,\n    onChange: handleChange('accidents'),\n    className: classes.textField,\n    margin: \"normal\",\n    helperText: \"Please describe in detail\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-multiline-flexible\",\n    label: \"Maintenance Report\",\n    multiline: true,\n    rowsMax: \"4\",\n    value: values.maintenance,\n    onChange: handleChange('maintenance'),\n    className: classes.textField,\n    margin: \"normal\",\n    helperText: \"Please describe in detail\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\" // component={Link}\n    // to=\"/\"\n    ,\n    onClick: () => // result=carLogs[0].split(\"|\")\n    // values.id=result[4]\n    logCar(values.name, values.vin, values.owner, values.odometer, values.year, values.type, values.gearbox, values.accidents, values.maintenance),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"Save Car\"))));\n};\n\nexport default LogContainer;","map":{"version":3,"sources":["/Users/austinvuong/AuthentiCar/src/containers/LogContainer.js"],"names":["React","useCallback","useState","makeStyles","TextField","AccountTopBar","Typography","Grid","Button","Link","useWavelet","useAccount","useContract","Wavelet","JSBI","MenuItem","BigInt","gearbox","value","label","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","width","itemGrid","LogContainer","props","classes","client","node","clientErr","carLogs","setCarLogs","onUpdate","contract","wallet","loadWalletFromPrivateKey","test","logs","onLoad","logCar","name","vin","owner","odometer","year","type","accidents","maintenance","car","carName","carVin","carOwner","carOdometer","carYear","carType","carGearbox","carAccidents","carMaintenance","valid","res","empty","i","length","split","stringRes","JSON","parse","console","log","stringify","call","values","setValues","manValid","handleChange","event","target","MenuProps","className","map","option"],"mappings":"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","sourcesContent":["\n\n\n\nimport React, {useCallback, useState} from 'react';\n// import clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n// import MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport AccountTopBar from '../components/AccountTopBar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\";\nimport MenuItem from '@material-ui/core/MenuItem';\n// import { descriptions } from 'jest-config';\nconst BigInt = JSBI.BigInt;\n\nconst gearbox = [\n  {\n    value: 'automatic',\n    label: 'Automatic',\n  },\n  {\n    value: 'manual',\n    label: 'Manual',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(12),\n    marginRight: theme.spacing(0),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n  itemGrid: {\n      marginTop: 64,\n  }\n}));\n\nconst LogContainer = props =>  {\n  const classes = useStyles();\n  // let id = 0;\n  const [client, node, clientErr] = useWavelet('https://testnet.perlin.net');\n  const [carLogs, setCarLogs] = useState([]);\n  const onUpdate = useCallback((contract) => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n  }, []);\n\n\n  const onLoad = useCallback((contract) => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet,'get_cars', BigInt(0)).logs);\n  }, []);\n  const [contract] = useContract(client, '28e0ea3defced9bac9d3dcc60d2d58d57bf3cb4d874b89e5ea2943e47bead49f', onUpdate, onLoad);\n  // console.log(carLogs);\n  const logCar = (name, vin, owner, odometer, year, type, gearbox, accidents, maintenance ) => {\n    // const car = name + '|' + vin + '|' + owner + '|' + odometer;\n    const car = {\n      carName: name,\n      carVin: vin,\n      carOwner: owner,\n      carOdometer: odometer,\n      carYear: year,\n      carType: type,\n      carGearbox: gearbox,\n      carAccidents: accidents,\n      carMaintenance: maintenance,\n    }\n    // var carLogsLength = carLogs.length;\n    // const carArray = car.split('|');\n    var valid = true;\n\n    let res = [];\n    let empty = false;\n      for (var i = 0; i <  carLogs.length; i++) {\n        if (carLogs[i] === \"\") {\n          empty = true;\n        }\n        res = carLogs[i].split('\\n');\n      }\n    if (!empty) {\n      for (var i = 0; i < res.length; i++) {\n        let stringRes = JSON.parse(res[i]);\n        if (stringRes.vin === vin) {\n          valid = false;\n        }\n      }\n    }\n      \n    \n    \n    // for (var i = 0; i < carLogsLength; i++) {\n      \n    //   let res = carLogs[i].split('\\n');\n    //   console.log(res);\n    //   JSON.parse(carLogs[i])\n    //   if (res[1] === carArray[1]) {\n    //     console.log('passed here');\n    //     valid = false;\n    //   }\n    // }\n    console.log(typeof contract);\n    if (valid) {\n      console.log('test');\n      JSON.stringify(car);\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      contract && contract.call(wallet, 'log_car', BigInt(0), BigInt(25000), BigInt(0), {\n        type: 'string',\n        value: car\n      }\n      );\n    }\n      \n  };\n    \n\n\n  const [values, setValues] = React.useState({\n    name: '',\n    vin: '',\n    owner: '',\n    odometer: '',\n    year: '',\n    type: '',\n    gearbox: '',\n    accidents: '',\n    maintenance: '',\n  });\n  const manValid = false;\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n      <>\n      <AccountTopBar/>\n      <Grid \n        container \n        spacing={4} \n        justify='center' \n        className={classes.itemGrid}\n    >\n        <Grid item>\n        <Typography variant=\"h4\" gutterBottom>\n            Car Log Form\n        </Typography>\n      </Grid>\n      <Grid item>\n    <form className={classes.container} noValidate autoComplete=\"off\">\n    <TextField\n        id=\"outlined-error\"\n        label=\"Car Name\"\n        className={classes.textField}\n        onChange={handleChange('name')}\n        value={values.name}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-error\"\n        label=\"VIN\"\n        className={classes.textField}\n        onChange={handleChange('vin')}\n        value={values.vin}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-error\"\n        label=\"Owner\"\n        className={classes.textField}\n        onChange={handleChange('owner')}\n        value={values.owner}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-error\"\n        label=\"Odometer\"\n        className={classes.textField}\n        onChange={handleChange('odometer')}\n        value={values.odometer}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-error\"\n        label=\"Year\"\n        className={classes.textField}\n        onChange={handleChange('year')}\n        value={values.year}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-error\"\n        label=\"Type\"\n        className={classes.textField}\n        onChange={handleChange('type')}\n        value={values.type}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-select-currency\"\n        select\n        label=\"Transmission\"\n        className={classes.textField}\n        value={values.gearbox}\n        onChange={handleChange('gearbox')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select type\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      >\n        {gearbox.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n\n      </TextField>\n      <TextField\n        id=\"outlined-multiline-flexible\"\n        label=\"Accidents\"\n        multiline\n        rowsMax=\"4\"\n        value={values.accidents}\n        onChange={handleChange('accidents')}\n        className={classes.textField}\n        margin=\"normal\"\n        helperText=\"Please describe in detail\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-multiline-flexible\"\n        label=\"Maintenance Report\"\n        multiline\n        rowsMax=\"4\"\n        value={values.maintenance}\n        onChange={handleChange('maintenance')}\n        className={classes.textField}\n        margin=\"normal\"\n        helperText=\"Please describe in detail\"\n        variant=\"outlined\"\n      />\n\n\n\n    </form>\n    </Grid>\n    <Grid item>\n    <Button \n          size=\"small\" \n          color=\"primary\"\n          // component={Link}\n          // to=\"/\"\n          onClick={() => \n            // result=carLogs[0].split(\"|\")\n            // values.id=result[4]\n\n            logCar(values.name, values.vin, values.owner, values.odometer, values.year, values.type, values.gearbox, values.accidents, values.maintenance)\n          }\n          >\n          Save Car\n        </Button>\n    </Grid>\n    </Grid>\n    </>\n  );\n}\n\nexport default LogContainer;"]},"metadata":{},"sourceType":"module"}