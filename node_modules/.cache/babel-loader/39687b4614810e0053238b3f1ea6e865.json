{"ast":null,"code":"import _slicedToArray from \"/Users/austinvuong/AuthentiCar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/austinvuong/AuthentiCar/src/containers/MainContainer.js\";\nimport React, { useEffect, useContext, useState, useCallback } from 'react';\nimport TopBar from '../components/TopBar';\nimport data from '../constants/car-items.json';\nimport CarComponent from '../components/CarComponent';\nimport Grid from '@material-ui/core/Grid'; // import hondaNsx from '../assets/honda.jpg';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropsContext from '../contexts/PropsContext';\nimport SavedContext from '../contexts/SavedContext'; // import SavedContext from '../contexts/SavedContext';\n// import SnackBarComponent from '../components/SnackBarComponent'\n\nimport SnackBarComponent from '../components/SnackBarComponent';\nimport EndList from '../components/EndListComponent';\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography'; // import StreamContext from '../contexts/StreamContext';\n// import { descriptions } from 'jest-config';\n\nconst BigInt = JSBI.BigInt;\nconst useStyles = makeStyles(theme => ({\n  itemGrid: {\n    marginTop: 64\n  },\n  progress: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst MainContainer = props => {\n  const classes = useStyles();\n  const propsContext = useContext(PropsContext);\n  const savedContext = useContext(SavedContext); // const streamContext = useContext(StreamContext);\n\n  const _useWavelet = useWavelet('https://testnet.perlin.net'),\n        _useWavelet2 = _slicedToArray(_useWavelet, 3),\n        client = _useWavelet2[0],\n        node = _useWavelet2[1],\n        clientErr = _useWavelet2[2];\n\n  const _useAccount = useAccount(client, '315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612'),\n        _useAccount2 = _slicedToArray(_useAccount, 2),\n        account = _useAccount2[0],\n        accountErr = _useAccount2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        carLogs = _useState2[0],\n        setCarLogs = _useState2[1];\n\n  let conn = true;\n  const onUpdate = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n\n    if (carLogs.length === 0) {\n      conn = false;\n    }\n  }, []);\n  const onLoad = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n\n    if (carLogs.length === 0) {\n      conn = false;\n    }\n  }, []);\n\n  const _useContract = useContract(client, '28e0ea3defced9bac9d3dcc60d2d58d57bf3cb4d874b89e5ea2943e47bead49f', onUpdate, onLoad),\n        _useContract2 = _slicedToArray(_useContract, 1),\n        contract = _useContract2[0];\n\n  let load = [];\n  let objRes = []; // console.log(carLogs);\n\n  if (carLogs.length === 0 && conn) {\n    load.push(React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n  let res = [];\n\n  for (var i = 0; i < carLogs.length; i++) {\n    res = carLogs[i].split('\\n');\n  }\n\n  console.log(res);\n\n  for (var j = 0; j < res.length; j++) {\n    let carOb = JSON.parse(res[j]);\n    console.log(carOb);\n    let carName = '';\n    carName = carOb.carName;\n    carName = carName.toUpperCase();\n    let carImage = '';\n\n    if (carName === 'HONDA NSX') {\n      carImage = 'honda_nsx.jpg';\n    }\n\n    if (carName === 'TOYOTA CAMRY') {\n      carImage = 'toyota_camry.jpg';\n    }\n\n    if (carName === 'CADILLAC ESCALADE') {\n      carImage = 'cadillac_escalade.jpg';\n    }\n\n    if (carName === 'AUDI A8') {\n      carImage = 'audi_a8.jpg';\n    }\n\n    objRes.push(React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(CarComponent, {\n      carName: carName,\n      carVin: carOb.carVin,\n      carOwner: carOb.carOwner,\n      carOdometer: carOb.carOdometer,\n      carYear: carOb.carYear,\n      carGearbox: carOb.carGearbox,\n      carAccidents: carOb.carAccidents,\n      carMaintenance: carOb.carMaintenance,\n      carImage: carImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })));\n  } // let entryRes = [];\n  // let objRes =[];\n  // // let objSave = [];\n  // // let add = false;\n  // let tempVin = [];\n  // // let result = new Object();\n  // let carLogsLength = carLogs.length;\n  // let load = []\n  // // console.log(conn);\n  //     for (var i = 0; i < carLogsLength; i++) {\n  //         entryRes = carLogs[i].split('\\n');\n  //     }\n  //     // let entryLengthReserve = 0;\n  //     let entryResLength = entryRes.length;\n  //     // console.log(entryResLength);\n  //     // console.log(streamContext.stream)\n  //     for (var j = 0; j < entryResLength; j++) {\n  //         let stringRes = entryRes[j].split('|');\n  //         // resF.push(stringRes);\n  //         // console.log(stringRes[0])\n  //         // let object = {\n  //         //     carName: stringRes[0],\n  //         //     carVin: stringRes[1],\n  //         //     carOwner: stringRes[2],\n  //         //     carOdometer: stringRes[3]\n  //         // }\n  //         // objSave.push(object);\n  //         let carName = stringRes[0];\n  //         let carVin = stringRes[1];\n  //         // console.log(stringRes[1]);\n  //         // streamContext.addToStream(stringRes[1]);\n  //         let carOwner = stringRes[2];\n  //         let carOdometer = stringRes[3];\n  //         let carImage = '';\n  //         carName = carName.toUpperCase();\n  //         if (carName === 'HONDA NSX') {\n  //             carImage = 'honda_nsx.jpg'\n  //         }\n  //         if (carVin) {\n  //             objRes.push(<Grid item>\n  //             <CarComponent \n  //             carName={carName}\n  //             carVin={carVin}\n  //             carOwner={carOwner}\n  //             carOdometer={carOdometer}\n  //             carImage={carImage}\n  //             />\n  //             </Grid>\n  //             )\n  //         }\n  //     }\n\n\n  useEffect(() => {}, [carLogs]);\n  useEffect(() => {\n    // console.log(\"here\");\n    Object.keys(propsContext.savedProps).map(x => propsContext.removeFromSavedProps(x));\n  }); // const valid = true;\n\n  return React.createElement(React.Fragment, null, React.createElement(TopBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    className: classes.itemGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, load, objRes));\n};\n\nexport default MainContainer;","map":{"version":3,"sources":["/Users/austinvuong/AuthentiCar/src/containers/MainContainer.js"],"names":["React","useEffect","useContext","useState","useCallback","TopBar","data","CarComponent","Grid","makeStyles","PropsContext","SavedContext","SnackBarComponent","EndList","useWavelet","useAccount","useContract","Wavelet","JSBI","CircularProgress","Typography","BigInt","useStyles","theme","itemGrid","marginTop","progress","margin","spacing","MainContainer","props","classes","propsContext","savedContext","client","node","clientErr","account","accountErr","carLogs","setCarLogs","conn","onUpdate","contract","wallet","loadWalletFromPrivateKey","test","logs","length","onLoad","load","objRes","push","res","i","split","console","log","j","carOb","JSON","parse","carName","toUpperCase","carImage","carVin","carOwner","carOdometer","carYear","carGearbox","carAccidents","carMaintenance","Object","keys","savedProps","map","x","removeFromSavedProps"],"mappings":"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","sourcesContent":["import React, {useEffect, useContext, useState, useCallback} from 'react';\nimport TopBar from '../components/TopBar';\nimport data from '../constants/car-items.json'\nimport CarComponent from '../components/CarComponent';\nimport Grid from '@material-ui/core/Grid';\n// import hondaNsx from '../assets/honda.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropsContext from '../contexts/PropsContext';\nimport SavedContext from '../contexts/SavedContext';\n// import SavedContext from '../contexts/SavedContext';\n// import SnackBarComponent from '../components/SnackBarComponent'\nimport SnackBarComponent from '../components/SnackBarComponent';\nimport EndList from '../components/EndListComponent';\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n// import StreamContext from '../contexts/StreamContext';\n// import { descriptions } from 'jest-config';\nconst BigInt = JSBI.BigInt;\n\n\n\nconst useStyles = makeStyles(theme => ({\n    itemGrid: {\n        marginTop: 64,\n    },\n    progress: {\n        margin: theme.spacing(2),\n      },\n\n}))\n\nconst MainContainer = props => {\n    const classes = useStyles();\n    const propsContext = useContext(PropsContext);\n    const savedContext = useContext(SavedContext);\n    // const streamContext = useContext(StreamContext);\n\n    const [client, node, clientErr] = useWavelet('https://testnet.perlin.net');\n    const [account, accountErr] = useAccount(client, '315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    const [carLogs, setCarLogs] = useState([]);\n    let conn = true;\n    const onUpdate = useCallback((contract) => {\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n      if (carLogs.length === 0) {\n        conn = false;\n      }\n    }, []);\n  \n    const onLoad = useCallback((contract) => {\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      setCarLogs(contract.test(wallet,'get_cars', BigInt(0)).logs);\n      if (carLogs.length === 0) {\n          conn = false;\n      }\n    }, []);\n  \n    const [contract] = useContract(client, '28e0ea3defced9bac9d3dcc60d2d58d57bf3cb4d874b89e5ea2943e47bead49f', onUpdate, onLoad);\n    let load = [];\n    let objRes = [];\n    // console.log(carLogs);\n    if (carLogs.length === 0 && conn) {\n        load.push(\n            <Grid item>\n                <CircularProgress className={classes.progress} />\n            </Grid>\n\n        )\n    }\n    let res = []\n        for (var i = 0; i < carLogs.length; i++) {\n            res = carLogs[i].split('\\n');\n        }\n    console.log(res);\n        \n    for (var j = 0; j < res.length; j++) {\n        let carOb = JSON.parse(res[j]);\n        console.log (carOb);\n        let carName = '';\n        carName = carOb.carName;\n        carName = carName.toUpperCase();\n        let carImage = '';\n        if (carName === 'HONDA NSX') {\n            carImage = 'honda_nsx.jpg';\n        }\n        if (carName === 'TOYOTA CAMRY') {\n            carImage = 'toyota_camry.jpg';\n        }\n        if (carName === 'CADILLAC ESCALADE') {\n            carImage = 'cadillac_escalade.jpg';\n        }\n        if (carName === 'AUDI A8') {\n            carImage = 'audi_a8.jpg';\n        }\n        objRes.push(\n            <Grid item>\n                <CarComponent\n                carName={carName}\n                carVin={carOb.carVin}\n                carOwner={carOb.carOwner}\n                carOdometer={carOb.carOdometer}\n                carYear = {carOb.carYear}\n                carGearbox = {carOb.carGearbox}\n                carAccidents = {carOb.carAccidents}\n                carMaintenance = {carOb.carMaintenance}\n                carImage={carImage}\n                />\n            </Grid>\n        );\n\n    }\n    \n\n\n\n\n\n\n\n    \n    // let entryRes = [];\n    // let objRes =[];\n    // // let objSave = [];\n    // // let add = false;\n    // let tempVin = [];\n    // // let result = new Object();\n    // let carLogsLength = carLogs.length;\n    // let load = []\n    // // console.log(conn);\n    \n    \n        \n    //     for (var i = 0; i < carLogsLength; i++) {\n    //         entryRes = carLogs[i].split('\\n');\n    //     }\n    //     // let entryLengthReserve = 0;\n    //     let entryResLength = entryRes.length;\n    //     // console.log(entryResLength);\n        \n    //     // console.log(streamContext.stream)\n\n    //     for (var j = 0; j < entryResLength; j++) {\n    //         let stringRes = entryRes[j].split('|');\n    //         // resF.push(stringRes);\n    //         // console.log(stringRes[0])\n    //         // let object = {\n    //         //     carName: stringRes[0],\n    //         //     carVin: stringRes[1],\n    //         //     carOwner: stringRes[2],\n    //         //     carOdometer: stringRes[3]\n\n    //         // }\n    //         // objSave.push(object);\n    //         let carName = stringRes[0];\n    //         let carVin = stringRes[1];\n    //         // console.log(stringRes[1]);\n    //         // streamContext.addToStream(stringRes[1]);\n    //         let carOwner = stringRes[2];\n    //         let carOdometer = stringRes[3];\n    //         let carImage = '';\n    //         carName = carName.toUpperCase();\n    //         if (carName === 'HONDA NSX') {\n    //             carImage = 'honda_nsx.jpg'\n\n    //         }\n    //         if (carVin) {\n    //             objRes.push(<Grid item>\n    //             <CarComponent \n    //             carName={carName}\n    //             carVin={carVin}\n    //             carOwner={carOwner}\n    //             carOdometer={carOdometer}\n    //             carImage={carImage}\n    //             />\n    //             </Grid>\n    //             )\n    //         }\n\n    //     }\n    useEffect(() => {\n        \n    },[carLogs])\n    \n\n    useEffect(() => {\n        // console.log(\"here\");\n        Object.keys(propsContext.savedProps).map(x => (\n            propsContext.removeFromSavedProps(x)\n        ))\n    })\n    // const valid = true;\n    return (\n    <>\n    <TopBar />\n    <Grid \n        container \n        spacing={2} \n        justify='center' \n        className={classes.itemGrid}\n    >\n        {/* {data.items.map(x => (\n            <Grid item key={x.vin}>\n                <CarComponent {...x}/>\n            </Grid>\n        ))} */}\n        {load}\n        {objRes}\n\n        \n\n        \n        \n\n\n\n\n\n        {/* {savedContext.count > 0 ? (\n            Object.keys(savedContext.saved).map(id => (\n                <Grid item>\n                    <SnackBarComponent />\n                </Grid>\n            )))\n             : (\n                <EndList />\n            )\n            } */}\n        \n     </Grid>\n     </>\n    )\n};\n\nexport default MainContainer; "]},"metadata":{},"sourceType":"module"}