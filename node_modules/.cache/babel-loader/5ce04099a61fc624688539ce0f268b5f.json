{"ast":null,"code":"import _slicedToArray from \"/Users/austinvuong/AuthentiCar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/austinvuong/AuthentiCar/src/containers/CarContainer.js\";\nimport React, { useContext, useState, useCallback } from 'react';\nimport TopBar from '../components/TopBar'; // import CarComponent from '../components/CarComponent';\n\nimport Grid from '@material-ui/core/Grid'; // import hondaNsx from '../assets/honda.jpg';\n\nimport { makeStyles } from '@material-ui/core/styles'; // import Typography from '@material-ui/core/Typography';\n\nimport data from '../constants/car-items.json';\nimport PropsContext from '../contexts/PropsContext';\nimport CarDisplayComponent from '../components/CarDisplayComponent';\nimport SavedNoItems from '../components/SavedNoItems'; // import PropsContext from '../contexts/PropsContext';\n\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\"; // import StreamContext from '../contexts/StreamContext';\n// import { descriptions } from 'jest-config';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst BigInt = JSBI.BigInt;\nconst useStyles = makeStyles(theme => ({\n  itemGrid: {\n    marginTop: 64\n  },\n  media: {\n    height: 245\n  }\n}));\n\nconst getItemFromId = id => data.items.filter(x => x.id === id)[0];\n\nconst CarContainer = props => {\n  // const propsContext = useContext(PropsContext);\n  const classes = useStyles();\n  const propsContext = useContext(PropsContext);\n  const index = Object.keys(propsContext.savedProps);\n  console.log(index);\n  const key = index[0]; // console.log(propsContext.savedProps);\n\n  const _useWavelet = useWavelet('https://testnet.perlin.net'),\n        _useWavelet2 = _slicedToArray(_useWavelet, 3),\n        client = _useWavelet2[0],\n        node = _useWavelet2[1],\n        clientErr = _useWavelet2[2];\n\n  const _useAccount = useAccount(client, '315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612'),\n        _useAccount2 = _slicedToArray(_useAccount, 2),\n        account = _useAccount2[0],\n        accountErr = _useAccount2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        carLogs = _useState2[0],\n        setCarLogs = _useState2[1];\n\n  const onUpdate = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n  }, []);\n  const onLoad = useCallback(contract => {\n    const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n  }, []);\n\n  const _useContract = useContract(client, '28e0ea3defced9bac9d3dcc60d2d58d57bf3cb4d874b89e5ea2943e47bead49f', onUpdate, onLoad),\n        _useContract2 = _slicedToArray(_useContract, 1),\n        contract = _useContract2[0]; // let entryRes = []\n\n\n  let comp = []; // let carLogsLength = carLogs.length;\n  //     for (var i = 0; i < carLogsLength; i++) {\n  //         entryRes = carLogs[i].split('\\n');\n  //     }\n  //     let entryResLength = entryRes.length;\n  //     for (var j = 0; j < entryResLength; j++) {\n  //         let stringRes = entryRes[j].split('|');\n  //         // console.log('whatwhatwhat');\n  //         // console.log(key);\n  //         if (stringRes[1] === key) {\n  //             console.log('yo');\n  //             let carName = stringRes[0];\n  //             let carVin = stringRes[1];\n  //             // streamContext.addToStream(stringRes[1]);\n  //             let carOwner = stringRes[2];\n  //             let carOdometer = stringRes[3];\n  //             let carImage = '';\n  //             carName = carName.toUpperCase();\n  //             if (carName === 'HONDA NSX') {\n  //                 carImage = 'honda_nsx.jpg'\n  //             }\n  //             comp.push(<Grid item> \n  //             <CarDisplayComponent\n  //                 carName={carName}\n  //                 carVin={carVin}\n  //                 carOwner={carOwner}\n  //                 carOdometer={carOdometer}\n  //                 carImage={carImage} />\n  //             </Grid>\n  //             )\n  //         }\n  //     }\n\n  let res = [];\n\n  for (var i = 0; i < carLogs.length; i++) {\n    res = carLogs[i].split('\\n');\n  } // console.log(res);\n\n\n  for (var i = 0; i < res.length; i++) {\n    let carOb = JSON.parse(res[i]);\n    let carName = '';\n    carName = carOb.carName;\n    carName = carName.toUpperCase();\n    let carImage = '';\n\n    if (carName === 'HONDA NSX') {\n      carImage = 'honda_nsx.jpg';\n    }\n\n    if (carName === 'TOYOTA CAMRY') {\n      carImage = 'toyota_camry.jpg';\n    }\n\n    if (carName === 'CADILLAC ESCALADE') {\n      carImage = 'cadillac_escalade.jpg';\n    }\n\n    if (carName === 'AUDI A8') {\n      carImage = 'audi_a8.jpg';\n    }\n\n    if (key === carOb.carVin) {\n      console.log(carOb.carAccidents);\n      console.log(carOb.carMaintenance);\n      comp.push(React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(CarDisplayComponent, {\n        carName: carName,\n        carVin: carOb.carVin,\n        carOwner: carOb.carOwner,\n        carOdometer: carOb.carOdometer,\n        carYear: carOb.carYear,\n        carType: carOb.carType,\n        carGearbox: carOb.carGearbox,\n        carAccidents: carOb.carAccidents,\n        carMaintenance: carOb.carMaintenance,\n        carImage: carImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })));\n    }\n  }\n\n  let load = [];\n\n  if (comp.length === 0) {\n    load.push(React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })));\n  } // useEffect(() => {\n  //     console.log(\"here\");\n  //     {Object.keys(propsContext.savedProps).map(x => (\n  //         propsContext.removeFromSavedProps(x)\n  //     ))}\n  // })\n\n\n  return React.createElement(React.Fragment, null, React.createElement(TopBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    className: classes.itemGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, load, comp));\n};\n\nexport default CarContainer;","map":{"version":3,"sources":["/Users/austinvuong/AuthentiCar/src/containers/CarContainer.js"],"names":["React","useContext","useState","useCallback","TopBar","Grid","makeStyles","data","PropsContext","CarDisplayComponent","SavedNoItems","useWavelet","useAccount","useContract","Wavelet","JSBI","CircularProgress","BigInt","useStyles","theme","itemGrid","marginTop","media","height","getItemFromId","id","items","filter","x","CarContainer","props","classes","propsContext","index","Object","keys","savedProps","console","log","key","client","node","clientErr","account","accountErr","carLogs","setCarLogs","onUpdate","contract","wallet","loadWalletFromPrivateKey","test","logs","onLoad","comp","res","i","length","split","carOb","JSON","parse","carName","toUpperCase","carImage","carVin","carAccidents","carMaintenance","push","carOwner","carOdometer","carYear","carType","carGearbox","load","progress"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useCallback} from 'react';\nimport TopBar from '../components/TopBar';\n// import CarComponent from '../components/CarComponent';\nimport Grid from '@material-ui/core/Grid';\n// import hondaNsx from '../assets/honda.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\nimport data from '../constants/car-items.json'\nimport PropsContext from '../contexts/PropsContext';\nimport CarDisplayComponent from '../components/CarDisplayComponent';\nimport SavedNoItems from '../components/SavedNoItems';\n// import PropsContext from '../contexts/PropsContext';\nimport { useWavelet, useAccount, useContract } from 'react-use-wavelet';\nimport { Wavelet } from 'wavelet-client';\nimport JSBI from \"jsbi\";\n// import StreamContext from '../contexts/StreamContext';\n// import { descriptions } from 'jest-config';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst BigInt = JSBI.BigInt;\n\n\n\nconst useStyles = makeStyles(theme => ({\n    itemGrid: {\n        marginTop: 64,\n    },\n    media: {\n        height: 245,\n    }\n\n}))\n\nconst getItemFromId = id => data.items.filter(x => x.id === id)[0];\n\n\nconst CarContainer = props => {\n    // const propsContext = useContext(PropsContext);\n    \n    const classes = useStyles();\n    const propsContext = useContext(PropsContext);\n    const index = Object.keys(propsContext.savedProps);\n    console.log(index);\n    const key = index[0]\n    // console.log(propsContext.savedProps);\n\n    const [client, node, clientErr] = useWavelet('https://testnet.perlin.net');\n    const [account, accountErr] = useAccount(client, '315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n    const [carLogs, setCarLogs] = useState([]);\n  \n    const onUpdate = useCallback((contract) => {\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      setCarLogs(contract.test(wallet, 'get_cars', BigInt(0)).logs);\n    }, []);\n  \n    const onLoad = useCallback((contract) => {\n      const wallet = Wavelet.loadWalletFromPrivateKey('315f62c8f44fb6bf8351c9051b466ea93bf204706cc76a3878196caf253205f2d2b782d908775508aa65ecbc3327f78b200518623282bd75b617d72b07bc8612');\n      setCarLogs(contract.test(wallet,'get_cars', BigInt(0)).logs);\n    }, []);\n  \n    const [contract] = useContract(client, '28e0ea3defced9bac9d3dcc60d2d58d57bf3cb4d874b89e5ea2943e47bead49f', onUpdate, onLoad);\n\n    // let entryRes = []\n    let comp = []\n    // let carLogsLength = carLogs.length;\n    //     for (var i = 0; i < carLogsLength; i++) {\n    //         entryRes = carLogs[i].split('\\n');\n    //     }\n    //     let entryResLength = entryRes.length;\n    //     for (var j = 0; j < entryResLength; j++) {\n    //         let stringRes = entryRes[j].split('|');\n    //         // console.log('whatwhatwhat');\n    //         // console.log(key);\n    //         if (stringRes[1] === key) {\n    //             console.log('yo');\n    //             let carName = stringRes[0];\n    //             let carVin = stringRes[1];\n    //             // streamContext.addToStream(stringRes[1]);\n    //             let carOwner = stringRes[2];\n    //             let carOdometer = stringRes[3];\n    //             let carImage = '';\n    //             carName = carName.toUpperCase();\n    //             if (carName === 'HONDA NSX') {\n    //                 carImage = 'honda_nsx.jpg'\n    //             }\n    //             comp.push(<Grid item> \n    //             <CarDisplayComponent\n    //                 carName={carName}\n    //                 carVin={carVin}\n    //                 carOwner={carOwner}\n    //                 carOdometer={carOdometer}\n    //                 carImage={carImage} />\n    //             </Grid>\n    //             )\n\n    //         }\n    //     }\n    let res = []\n        for (var i = 0; i < carLogs.length; i++) {\n            res = carLogs[i].split('\\n');\n        }\n        // console.log(res);\n    for (var i = 0; i < res.length; i++) {\n        let carOb = JSON.parse(res[i]);\n        let carName = '';\n        carName = carOb.carName;\n        carName = carName.toUpperCase();\n        let carImage = '';\n        if (carName === 'HONDA NSX') {\n            carImage = 'honda_nsx.jpg';\n        }\n        if (carName === 'TOYOTA CAMRY') {\n            carImage = 'toyota_camry.jpg';\n        }\n        if (carName === 'CADILLAC ESCALADE') {\n            carImage = 'cadillac_escalade.jpg';\n        }\n        if (carName === 'AUDI A8') {\n            carImage = 'audi_a8.jpg';\n        }\n        if (key === carOb.carVin) {\n            console.log(carOb.carAccidents);\n            console.log(carOb.carMaintenance);\n        comp.push(\n            <Grid item>\n                <CarDisplayComponent\n                carName={carName}\n                carVin={carOb.carVin}\n                carOwner={carOb.carOwner}\n                carOdometer={carOb.carOdometer}\n                carYear = {carOb.carYear}\n                carType = {carOb.carType}\n                carGearbox = {carOb.carGearbox}\n                carAccidents = {carOb.carAccidents}\n                carMaintenance = {carOb.carMaintenance}\n                carImage={carImage}\n                />\n            </Grid>\n        );\n        }\n\n    }\n        let load = []\n        if (comp.length === 0) {\n            load.push(\n                <Grid item>\n                    <CircularProgress className={classes.progress} />\n                </Grid>\n\n            )\n        }\n        \n\n    // useEffect(() => {\n    //     console.log(\"here\");\n    //     {Object.keys(propsContext.savedProps).map(x => (\n    //         propsContext.removeFromSavedProps(x)\n    //     ))}\n    // })\n    return (\n    <>\n    <TopBar />\n    <Grid \n            container \n            spacing={2} \n            justify='center' \n            className={classes.itemGrid}\n        >          \n            {load}\n            {comp}\n         </Grid>\n     </>\n    )\n};\n\nexport default CarContainer; "]},"metadata":{},"sourceType":"module"}